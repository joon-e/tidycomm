[{"path":"https://joon-e.github.io/tidycomm/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https://www.contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/.","code":""},{"path":"https://joon-e.github.io/tidycomm/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to tidycomm","title":"Contributing to tidycomm","text":"outlines propose change tidycomm. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://joon-e.github.io/tidycomm/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to tidycomm","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"https://joon-e.github.io/tidycomm/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Contributing to tidycomm","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://joon-e.github.io/tidycomm/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"Contributing to tidycomm","text":"recommend create Git branch pull request (PR). Look Travis AppVeyor build status making changes. README contain badges continuous integration services used package. New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://joon-e.github.io/tidycomm/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to tidycomm","text":"Please note tidycomm project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://joon-e.github.io/tidycomm/CONTRIBUTING.html","id":"see-tidyverse-development-contributing-guide","dir":"","previous_headings":"","what":"See tidyverse development contributing guide","title":"Contributing to tidycomm","text":"details.","code":""},{"path":"https://joon-e.github.io/tidycomm/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://joon-e.github.io/tidycomm/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://joon-e.github.io/tidycomm/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://joon-e.github.io/tidycomm/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://joon-e.github.io/tidycomm/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://joon-e.github.io/tidycomm/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://joon-e.github.io/tidycomm/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://joon-e.github.io/tidycomm/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://joon-e.github.io/tidycomm/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://joon-e.github.io/tidycomm/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://joon-e.github.io/tidycomm/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://joon-e.github.io/tidycomm/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://joon-e.github.io/tidycomm/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://joon-e.github.io/tidycomm/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://joon-e.github.io/tidycomm/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://joon-e.github.io/tidycomm/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://joon-e.github.io/tidycomm/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://joon-e.github.io/tidycomm/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://joon-e.github.io/tidycomm/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://joon-e.github.io/tidycomm/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://joon-e.github.io/tidycomm/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2019 RStudio  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. tidycomm Copyright (C) 2019 RStudio This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://joon-e.github.io/tidycomm/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with tidycomm","title":"Getting help with tidycomm","text":"Thanks using tidycomm. filing issue, places explore pieces put together make process smooth possible. Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site. Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed. right place, need file issue, please review “File issues” paragraph tidyverse contributing guidelines. Thanks help!","code":""},{"path":"https://joon-e.github.io/tidycomm/articles/v01_univariate.html","id":"describe-continuous-variables","dir":"Articles","previous_headings":"","what":"Describe continuous variables","title":"Univariate analysis of continuous and categorical variables","text":"describe() outputs several measures central tendency variability variables named function call: variables passed describe(), numeric variables data described: Data can grouped describing: returning results describe() can also visualized:  addition, percentiles can easily extracted continuous variables: Percentiles can also visualized:","code":"WoJ %>%     describe(autonomy_selection, autonomy_emphasis, work_experience) #> # A tibble: 3 × 15 #>   Variable            N Missing     M     SD   Min   Q25   Mdn   Q75   Max Range #> * <chr>           <int>   <int> <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1 autonomy_selec…  1197       3  3.88  0.803     1     4     4     4     5     4 #> 2 autonomy_empha…  1195       5  4.08  0.793     1     4     4     5     5     4 #> 3 work_experience  1187      13 17.8  10.9       1     8    17    25    53    52 #> # ℹ 4 more variables: CI_95_LL <dbl>, CI_95_UL <dbl>, Skewness <dbl>, #> #   Kurtosis <dbl> WoJ %>%    describe() #> # A tibble: 11 × 15 #>    Variable           N Missing     M     SD   Min   Q25   Mdn   Q75   Max Range #>  * <chr>          <int>   <int> <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 autonomy_sele…  1197       3  3.88  0.803     1  4        4     4     5     4 #>  2 autonomy_emph…  1195       5  4.08  0.793     1  4        4     5     5     4 #>  3 ethics_1        1200       0  1.63  0.892     1  1        1     2     5     4 #>  4 ethics_2        1200       0  3.21  1.26      1  2        4     4     5     4 #>  5 ethics_3        1200       0  2.39  1.13      1  2        2     3     5     4 #>  6 ethics_4        1200       0  2.58  1.25      1  1.75     2     4     5     4 #>  7 work_experien…  1187      13 17.8  10.9       1  8       17    25    53    52 #>  8 trust_parliam…  1200       0  3.05  0.811     1  3        3     4     5     4 #>  9 trust_governm…  1200       0  2.82  0.854     1  2        3     3     5     4 #> 10 trust_parties   1200       0  2.42  0.736     1  2        2     3     4     3 #> 11 trust_politic…  1200       0  2.52  0.712     1  2        3     3     4     3 #> # ℹ 4 more variables: CI_95_LL <dbl>, CI_95_UL <dbl>, Skewness <dbl>, #> #   Kurtosis <dbl> WoJ %>%     dplyr::group_by(country) %>%    describe(autonomy_emphasis, autonomy_selection) #> # A tibble: 10 × 16 #> # Groups:   country [5] #>    country     Variable      N Missing     M    SD   Min   Q25   Mdn   Q75   Max #>  * <fct>       <chr>     <int>   <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 Austria     autonomy…   205       2  4.19 0.614     2     4     4     5     5 #>  2 Denmark     autonomy…   375       1  3.90 0.856     1     4     4     4     5 #>  3 Germany     autonomy…   172       1  4.34 0.818     1     4     5     5     5 #>  4 Switzerland autonomy…   233       0  4.07 0.694     1     4     4     4     5 #>  5 UK          autonomy…   210       1  4.08 0.838     2     4     4     5     5 #>  6 Austria     autonomy…   207       0  3.92 0.637     2     4     4     4     5 #>  7 Denmark     autonomy…   376       0  3.76 0.892     1     3     4     4     5 #>  8 Germany     autonomy…   172       1  3.97 0.881     1     3     4     5     5 #>  9 Switzerland autonomy…   233       0  3.92 0.628     1     4     4     4     5 #> 10 UK          autonomy…   209       2  3.91 0.867     1     3     4     5     5 #> # ℹ 5 more variables: Range <dbl>, CI_95_LL <dbl>, CI_95_UL <dbl>, #> #   Skewness <dbl>, Kurtosis <dbl> WoJ %>%    describe() %>%    visualize() WoJ %>%    tab_percentiles() #> # A tibble: 11 × 11 #>    Variable            p10   p20   p30   p40   p50   p60   p70   p80   p90  p100 #>  * <chr>             <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 autonomy_selecti…     3     3     4     4     4     4     4     4     5     5 #>  2 autonomy_emphasis     3     4     4     4     4     4     4     5     5     5 #>  3 ethics_1              1     1     1     1     1     2     2     2     3     5 #>  4 ethics_2              1     2     2     3     4     4     4     4     5     5 #>  5 ethics_3              1     1     2     2     2     2     3     4     4     5 #>  6 ethics_4              1     1     2     2     2     3     3     4     4     5 #>  7 work_experience       4     7    10    14    17    20    25    28    33    53 #>  8 trust_parliament      2     2     3     3     3     3     3     4     4     5 #>  9 trust_government      2     2     2     3     3     3     3     4     4     5 #> 10 trust_parties         1     2     2     2     2     3     3     3     3     4 #> 11 trust_politicians     2     2     2     2     3     3     3     3     3     4 WoJ %>%    tab_percentiles(trust_parties) %>%    visualize()"},{"path":"https://joon-e.github.io/tidycomm/articles/v01_univariate.html","id":"describe-categorical-variables","dir":"Articles","previous_headings":"","what":"Describe categorical variables","title":"Univariate analysis of continuous and categorical variables","text":"describe_cat() outputs short summary categorical variables (number unique values, mode, N mode) variables named function call: variables passed describe_cat(), categorical variables (.e., character factor variables) data described: Data can grouped describing: , also results describe_cat() can visualized like :","code":"WoJ %>%    describe_cat(reach, employment, temp_contract) #> # A tibble: 3 × 6 #>   Variable          N Missing Unique Mode      Mode_N #> * <chr>         <int>   <int>  <dbl> <chr>      <int> #> 1 reach          1200       0      4 National     617 #> 2 employment     1200       0      3 Full-time    902 #> 3 temp_contract  1001     199      2 Permanent    948 WoJ %>%    describe_cat() #> # A tibble: 4 × 6 #>   Variable          N Missing Unique Mode      Mode_N #> * <chr>         <int>   <int>  <dbl> <chr>      <int> #> 1 country        1200       0      5 Denmark      376 #> 2 reach          1200       0      4 National     617 #> 3 employment     1200       0      3 Full-time    902 #> 4 temp_contract  1001     199      2 Permanent    948 WoJ %>%    dplyr::group_by(reach) %>%    describe_cat(country, employment) #> # A tibble: 8 × 7 #> # Groups:   reach [4] #>   reach         Variable       N Missing Unique Mode        Mode_N #> * <fct>         <chr>      <int>   <int>  <dbl> <chr>        <int> #> 1 Local         country      149       0      5 Germany         47 #> 2 Regional      country      355       0      5 Switzerland     90 #> 3 National      country      617       0      5 Denmark        262 #> 4 Transnational country       79       0      4 UK              72 #> 5 Local         employment   149       0      3 Full-time      111 #> 6 Regional      employment   355       0      3 Full-time      287 #> 7 National      employment   617       0      3 Full-time      438 #> 8 Transnational employment    79       0      3 Full-time       66 WoJ %>%    describe_cat() %>%    visualize()"},{"path":"https://joon-e.github.io/tidycomm/articles/v01_univariate.html","id":"tabulate-frequencies-of-categorical-variables","dir":"Articles","previous_headings":"","what":"Tabulate frequencies of categorical variables","title":"Univariate analysis of continuous and categorical variables","text":"tab_frequencies() outputs absolute relative frequencies unique values one categorical variables: Passing one variable compute relative frequencies based combinations unique values: can also group data . lead within-group relative frequencies: (Compare columns percent, cum_n cum_percent output .) course, also tab_frequencies() can easily visualized:","code":"WoJ %>%     tab_frequencies(employment) #> # A tibble: 3 × 5 #>   employment     n percent cum_n cum_percent #> * <chr>      <int>   <dbl> <int>       <dbl> #> 1 Freelancer   172   0.143   172       0.143 #> 2 Full-time    902   0.752  1074       0.895 #> 3 Part-time    126   0.105  1200       1 WoJ %>%     tab_frequencies(employment, country) #> # A tibble: 15 × 6 #>    employment country         n percent cum_n cum_percent #>  * <chr>      <fct>       <int>   <dbl> <int>       <dbl> #>  1 Freelancer Austria        16 0.0133     16      0.0133 #>  2 Freelancer Denmark        85 0.0708    101      0.0842 #>  3 Freelancer Germany        29 0.0242    130      0.108  #>  4 Freelancer Switzerland    10 0.00833   140      0.117  #>  5 Freelancer UK             32 0.0267    172      0.143  #>  6 Full-time  Austria       165 0.138     337      0.281  #>  7 Full-time  Denmark       275 0.229     612      0.51   #>  8 Full-time  Germany       139 0.116     751      0.626  #>  9 Full-time  Switzerland   154 0.128     905      0.754  #> 10 Full-time  UK            169 0.141    1074      0.895  #> 11 Part-time  Austria        26 0.0217   1100      0.917  #> 12 Part-time  Denmark        16 0.0133   1116      0.93   #> 13 Part-time  Germany         5 0.00417  1121      0.934  #> 14 Part-time  Switzerland    69 0.0575   1190      0.992  #> 15 Part-time  UK             10 0.00833  1200      1 WoJ %>%    dplyr::group_by(country) %>%     tab_frequencies(employment) #> # A tibble: 15 × 6 #> # Groups:   country [5] #>    employment country         n percent cum_n cum_percent #>  * <chr>      <fct>       <int>   <dbl> <int>       <dbl> #>  1 Freelancer Austria        16  0.0773    16      0.0773 #>  2 Full-time  Austria       165  0.797    181      0.874  #>  3 Part-time  Austria        26  0.126    207      1      #>  4 Freelancer Denmark        85  0.226     85      0.226  #>  5 Full-time  Denmark       275  0.731    360      0.957  #>  6 Part-time  Denmark        16  0.0426   376      1      #>  7 Freelancer Germany        29  0.168     29      0.168  #>  8 Full-time  Germany       139  0.803    168      0.971  #>  9 Part-time  Germany         5  0.0289   173      1      #> 10 Freelancer Switzerland    10  0.0429    10      0.0429 #> 11 Full-time  Switzerland   154  0.661    164      0.704  #> 12 Part-time  Switzerland    69  0.296    233      1      #> 13 Freelancer UK             32  0.152     32      0.152  #> 14 Full-time  UK            169  0.801    201      0.953  #> 15 Part-time  UK             10  0.0474   211      1 WoJ %>%    tab_frequencies(country) %>%    visualize()"},{"path":"https://joon-e.github.io/tidycomm/articles/v02_bivariate.html","id":"compute-contingency-tables-and-chi-square-tests","dir":"Articles","previous_headings":"","what":"Compute contingency tables and Chi-square tests","title":"Bivariate analysis of continuous and/or categorical variables","text":"crosstab() outputs contingency table one independent (column) variable one dependent (row) variables: Additional options include add_total (adds row-wise Total column set TRUE) percentages (outputs column-wise percentages instead absolute values set TRUE): Setting chi_square = TRUE computes χ2\\chi^2 test including Cramer’s VV outputs results console message: Finally, passing multiple row variables treat unique value combinations single variable percentage Chi-square computations: can also visualize output crosstab():  Note percentages = TRUE argument determines whether bars add 100% thus cover whole width whether :","code":"WoJ %>%    crosstab(reach, employment) #> # A tibble: 3 × 5 #>   employment Local Regional National Transnational #> * <chr>      <dbl>    <dbl>    <dbl>         <dbl> #> 1 Freelancer    23       36      104             9 #> 2 Full-time    111      287      438            66 #> 3 Part-time     15       32       75             4 WoJ %>%    crosstab(reach, employment, add_total = TRUE, percentages = TRUE) #> # A tibble: 3 × 6 #>   employment Local Regional National Transnational Total #> * <chr>      <dbl>    <dbl>    <dbl>         <dbl> <dbl> #> 1 Freelancer 0.154   0.101     0.169        0.114  0.143 #> 2 Full-time  0.745   0.808     0.710        0.835  0.752 #> 3 Part-time  0.101   0.0901    0.122        0.0506 0.105 WoJ %>%    crosstab(reach, employment, chi_square = TRUE) #> # A tibble: 3 × 5 #>   employment Local Regional National Transnational #> * <chr>      <dbl>    <dbl>    <dbl>         <dbl> #> 1 Freelancer    23       36      104             9 #> 2 Full-time    111      287      438            66 #> 3 Part-time     15       32       75             4 #> # Chi-square = 16.005, df = 6, p = 0.014, V = 0.082 WoJ %>%    crosstab(reach, employment, country, percentages = TRUE) #> # A tibble: 15 × 6 #>    employment country       Local Regional National Transnational #>  * <chr>      <fct>         <dbl>    <dbl>    <dbl>         <dbl> #>  1 Freelancer Austria     0.0134   0.0113   0.0162         0      #>  2 Freelancer Denmark     0.0537   0.0197   0.112          0.0127 #>  3 Freelancer Germany     0.0470   0.0507   0.00648        0      #>  4 Freelancer Switzerland 0.0403   0.00845  0.00162        0      #>  5 Freelancer UK          0        0.0113   0.0324         0.101  #>  6 Full-time  Austria     0.0403   0.180    0.152          0.0127 #>  7 Full-time  Denmark     0.168    0.192    0.295          0      #>  8 Full-time  Germany     0.268    0.172    0.0616         0      #>  9 Full-time  Switzerland 0.168    0.197    0.0875         0.0633 #> 10 Full-time  UK          0.101    0.0676   0.113          0.759  #> 11 Part-time  Austria     0        0.0225   0.0292         0      #> 12 Part-time  Denmark     0.00671  0.0113   0.0178         0      #> 13 Part-time  Germany     0        0.00282  0.00648        0      #> 14 Part-time  Switzerland 0.0872   0.0479   0.0632         0      #> 15 Part-time  UK          0.00671  0.00563  0.00486        0.0506 WoJ %>%    crosstab(reach, employment, percentages = TRUE) %>%    visualize() WoJ %>%    crosstab(reach, employment) %>%    visualize()"},{"path":"https://joon-e.github.io/tidycomm/articles/v02_bivariate.html","id":"compute-t-tests","dir":"Articles","previous_headings":"","what":"Compute t-Tests","title":"Bivariate analysis of continuous and/or categorical variables","text":"Use t_test() quickly compute t-Tests group variable one test variables. Output includes test statistics, descriptive statistics Cohen’s dd effect size estimates: Passing test variables compute t-Tests numerical variables data: passing group variable two unique levels, t_test() produce warning default first two unique values. can manually define levels setting levels argument: Additional options include: pooled_sd: default, pooled variance used compute Cohen’s dd effect size estimates (s=√(n1−1)s12+(n2−1)s22n1+n2−2s = \\sqrt\\frac{(n_1 - 1)s^2_1 + (n_2 - 1)s^2_2}{n_1 + n_2 - 2}). Set pooled_sd = FALSE use simple variance estimation instead (s=√(s12+s22)2s = \\sqrt\\frac{(s^2_1 + s^2_2)}{2}). paired: Set paired = TRUE compute paired t-Test instead. advisable specify case-identifying variable case_var computing paired t-Tests, make sure data properly sorted. Previously, (now deprecated) option var.equal also available. overthrown, however, t_test() now default tests equal variance (using Levene test) decide whether use pooled variance use Welch approximation degrees freedom. t_test() also provides one-sample t-Test provide mu argument: course, also result t-Tests can visualized easily :","code":"WoJ %>%    t_test(temp_contract, autonomy_selection, autonomy_emphasis) #> # A tibble: 2 × 12 #>   Variable M_Permanent SD_Permanent M_Temporary SD_Temporary Delta_M     t    df #> * <chr>      <num:.3!>    <num:.3!>   <num:.3!>    <num:.3!> <num:.> <num> <dbl> #> 1 autonom…       3.910        0.755       3.698        0.932   0.212 1.627    56 #> 2 autonom…       4.124        0.768       3.887        0.870   0.237 2.171   995 #> # ℹ 4 more variables: p <num:.3!>, d <num:.3!>, Levene_p <dbl>, var_equal <chr> WoJ %>%    t_test(temp_contract) #> # A tibble: 11 × 12 #>    Variable     M_Permanent SD_Permanent M_Temporary SD_Temporary Delta_M      t #>  * <chr>          <num:.3!>    <num:.3!>   <num:.3!>    <num:.3!> <num:.> <num:> #>  1 autonomy_se…       3.910        0.755       3.698        0.932   0.212  1.627 #>  2 autonomy_em…       4.124        0.768       3.887        0.870   0.237  2.171 #>  3 ethics_1           1.568        0.850       1.981        0.990  -0.414 -3.415 #>  4 ethics_2           3.241        1.263       3.509        1.234  -0.269 -1.510 #>  5 ethics_3           2.369        1.121       2.283        0.928   0.086  0.549 #>  6 ethics_4           2.534        1.239       2.566        1.217  -0.032 -0.185 #>  7 work_experi…      17.707       10.540      11.283       11.821   6.424  4.288 #>  8 trust_parli…       3.073        0.797       3.019        0.772   0.054  0.480 #>  9 trust_gover…       2.870        0.847       2.642        0.811   0.229  1.918 #> 10 trust_parti…       2.430        0.724       2.358        0.736   0.072  0.703 #> 11 trust_polit…       2.533        0.707       2.396        0.689   0.136  1.369 #> # ℹ 5 more variables: df <dbl>, p <num:.3!>, d <num:.3!>, Levene_p <dbl>, #> #   var_equal <chr> WoJ %>%    t_test(employment, autonomy_selection, autonomy_emphasis) #> Warning: employment has more than 2 levels, defaulting to first two (Full-time #> and Part-time). Consider filtering your data or setting levels with the levels #> argument #> # A tibble: 2 × 12 #>   Variable     `M_Full-time` `SD_Full-time` `M_Part-time` `SD_Part-time` Delta_M #> * <chr>            <num:.3!>      <num:.3!>     <num:.3!>      <num:.3!> <num:.> #> 1 autonomy_se…         3.903          0.782         3.825          0.633   0.078 #> 2 autonomy_em…         4.118          0.781         4.016          0.759   0.102 #> # ℹ 6 more variables: t <num:.3!>, df <dbl>, p <num:.3!>, d <num:.3!>, #> #   Levene_p <dbl>, var_equal <chr>  WoJ %>%    t_test(employment, autonomy_selection, autonomy_emphasis, levels = c(\"Full-time\", \"Freelancer\")) #> # A tibble: 2 × 12 #>   Variable `M_Full-time` `SD_Full-time` M_Freelancer SD_Freelancer Delta_M     t #> * <chr>        <num:.3!>      <num:.3!>    <num:.3!>     <num:.3!> <num:.> <num> #> 1 autonom…         3.903          0.782        3.765         0.993   0.139 1.724 #> 2 autonom…         4.118          0.781        3.901         0.852   0.217 3.287 #> # ℹ 5 more variables: df <dbl>, p <num:.3!>, d <num:.3!>, Levene_p <dbl>, #> #   var_equal <chr> WoJ %>%    t_test(autonomy_emphasis, mu = 3.9) #> # A tibble: 1 × 9 #>   Variable              M    SD CI_95_LL CI_95_UL    Mu     t    df        p #> * <chr>             <dbl> <dbl>    <dbl>    <dbl> <dbl> <dbl> <dbl>    <dbl> #> 1 autonomy_emphasis  4.08 0.793     4.03     4.12   3.9  7.68  1194 3.23e-14 WoJ %>%    t_test(temp_contract, autonomy_selection, autonomy_emphasis) %>%    visualize()"},{"path":"https://joon-e.github.io/tidycomm/articles/v02_bivariate.html","id":"compute-one-way-anovas","dir":"Articles","previous_headings":"","what":"Compute one-way ANOVAs","title":"Bivariate analysis of continuous and/or categorical variables","text":"unianova() compute one-way ANOVAs one group variable one test variables. Output includes test statistics, η2\\eta^2 effect size estimates, ω2\\omega^2, Welch’s approximation used account unequal variances. Descriptives can added setting descriptives = TRUE. test variables passed, numerical variables data used: can also compute Tukey’s HSD post-hoc tests setting post_hoc = TRUE. Results added tibble list column post_hoc. can unnested tidyr::unnest(): Visualize one-way ANOVAs way visualize almost everything tidycomm:","code":"WoJ %>%    unianova(employment, autonomy_selection, autonomy_emphasis) #> # A tibble: 2 × 9 #>   Variable            F df_num df_denom     p omega_squared eta_squared Levene_p #> * <chr>           <num>  <dbl>    <dbl> <num>     <num:.3!>   <num:.3!>    <dbl> #> 1 autonomy_selec… 2.012      2      251 0.136         0.002      NA        0     #> 2 autonomy_empha… 5.861      2     1192 0.003        NA           0.010    0.175 #> # ℹ 1 more variable: var_equal <chr> WoJ %>%    unianova(employment, descriptives = TRUE) #> # A tibble: 11 × 15 #>    Variable                  F df_num df_denom     p omega_squared `M_Full-time` #>  * <chr>              <num:.3>  <dbl>    <dbl> <num>     <num:.3!>         <dbl> #>  1 autonomy_selection    2.012      2      251 0.136         0.002          3.90 #>  2 autonomy_emphasis     5.861      2     1192 0.003        NA              4.12 #>  3 ethics_1              2.171      2     1197 0.115        NA              1.62 #>  4 ethics_2              2.204      2     1197 0.111        NA              3.24 #>  5 ethics_3              5.823      2      253 0.003         0.007          2.39 #>  6 ethics_4              3.453      2     1197 0.032        NA              2.58 #>  7 work_experience       3.739      2      240 0.025         0.006         17.5  #>  8 trust_parliament      1.527      2     1197 0.218        NA              3.06 #>  9 trust_government     12.864      2     1197 0.000        NA              2.82 #> 10 trust_parties         0.842      2     1197 0.431        NA              2.42 #> 11 trust_politicians     0.328      2     1197 0.721        NA              2.52 #> # ℹ 8 more variables: `SD_Full-time` <dbl>, `M_Part-time` <dbl>, #> #   `SD_Part-time` <dbl>, M_Freelancer <dbl>, SD_Freelancer <dbl>, #> #   eta_squared <num:.3!>, Levene_p <dbl>, var_equal <chr> WoJ %>%    unianova(employment, autonomy_selection, autonomy_emphasis, post_hoc = TRUE) #> # A tibble: 2 × 10 #>   Variable            F df_num df_denom     p omega_squared post_hoc eta_squared #> * <chr>           <num>  <dbl>    <dbl> <num>     <num:.3!> <list>     <num:.3!> #> 1 autonomy_selec… 2.012      2      251 0.136         0.002 <df>          NA     #> 2 autonomy_empha… 5.861      2     1192 0.003        NA     <df>           0.010 #> # ℹ 2 more variables: Levene_p <dbl>, var_equal <chr> WoJ %>%    unianova(employment, autonomy_selection, autonomy_emphasis, post_hoc = TRUE) %>%    dplyr::select(Variable, post_hoc) %>%    tidyr::unnest(post_hoc) #> # A tibble: 6 × 11 #>   Variable      Group_Var contrast Delta_M conf_lower conf_upper       p       d #>   <chr>         <chr>     <chr>      <dbl>      <dbl>      <dbl>   <dbl>   <dbl> #> 1 autonomy_sel… employme… Full-ti… -0.0780     -0.225     0.0688 0.422   -0.110  #> 2 autonomy_sel… employme… Full-ti… -0.139      -0.329     0.0512 0.199   -0.155  #> 3 autonomy_sel… employme… Part-ti… -0.0607     -0.284     0.163  0.798   -0.0729 #> 4 autonomy_emp… employme… Full-ti… -0.102      -0.278     0.0741 0.362   -0.133  #> 5 autonomy_emp… employme… Full-ti… -0.217      -0.372    -0.0629 0.00284 -0.266  #> 6 autonomy_emp… employme… Part-ti… -0.115      -0.333     0.102  0.428   -0.143  #> # ℹ 3 more variables: se <dbl>, t <dbl>, df <dbl> WoJ %>%    unianova(employment, autonomy_selection, autonomy_emphasis) %>%    visualize()"},{"path":"https://joon-e.github.io/tidycomm/articles/v02_bivariate.html","id":"compute-correlation-tables-and-matrices","dir":"Articles","previous_headings":"","what":"Compute correlation tables and matrices","title":"Bivariate analysis of continuous and/or categorical variables","text":"correlate() compute correlations combinations passed variables: variables passed, correlations combinations numerical variables computed: Specify focus variable using parameter correlate variables focus variable. Run partial correlation designating three variables along partial parameter. Visualize correlations passing results visualize() function:  provide two variables, automatically get correlogram (get convert correlations correlation matrix):  default, Pearson’s product-moment correlations coefficients (rr) computed. Set method \"kendall\" obtain Kendall’s τ\\tau \"spearman\" obtain Spearman’s ρ\\rho instead. obtain correlation matrix, pass output correlate() to_correlation_matrix():","code":"WoJ %>%    correlate(work_experience, autonomy_selection, autonomy_emphasis) #> # A tibble: 3 × 6 #>   x                  y                      r    df         p     n #> * <chr>              <chr>              <dbl> <int>     <dbl> <int> #> 1 work_experience    autonomy_selection 0.161  1182 2.71e-  8  1184 #> 2 work_experience    autonomy_emphasis  0.155  1180 8.87e-  8  1182 #> 3 autonomy_selection autonomy_emphasis  0.644  1192 4.83e-141  1194 WoJ %>%    correlate() #> # A tibble: 55 × 6 #>    x                  y                        r    df         p     n #>  * <chr>              <chr>                <dbl> <int>     <dbl> <int> #>  1 autonomy_selection autonomy_emphasis  0.644    1192 4.83e-141  1194 #>  2 autonomy_selection ethics_1          -0.0766   1195 7.98e-  3  1197 #>  3 autonomy_selection ethics_2          -0.0274   1195 3.43e-  1  1197 #>  4 autonomy_selection ethics_3          -0.0257   1195 3.73e-  1  1197 #>  5 autonomy_selection ethics_4          -0.0781   1195 6.89e-  3  1197 #>  6 autonomy_selection work_experience    0.161    1182 2.71e-  8  1184 #>  7 autonomy_selection trust_parliament  -0.00840  1195 7.72e-  1  1197 #>  8 autonomy_selection trust_government   0.0414   1195 1.53e-  1  1197 #>  9 autonomy_selection trust_parties      0.0269   1195 3.52e-  1  1197 #> 10 autonomy_selection trust_politicians  0.0109   1195 7.07e-  1  1197 #> # ℹ 45 more rows WoJ %>%    correlate(autonomy_selection, autonomy_emphasis, with = work_experience) #> # A tibble: 2 × 6 #>   x               y                      r    df            p     n #> * <chr>           <chr>              <dbl> <int>        <dbl> <int> #> 1 work_experience autonomy_selection 0.161  1182 0.0000000271  1184 #> 2 work_experience autonomy_emphasis  0.155  1180 0.0000000887  1182 WoJ %>%    correlate(autonomy_selection, autonomy_emphasis, partial = work_experience) #> # A tibble: 1 × 7 #>   x                  y                 z                 r    df         p     n #> * <chr>              <chr>             <chr>         <dbl> <dbl>     <dbl> <int> #> 1 autonomy_selection autonomy_emphasis work_experie… 0.637  1178 3.07e-135  1181 WoJ %>%    correlate(work_experience, autonomy_selection) %>%    visualize() WoJ %>%    correlate(work_experience, autonomy_selection, autonomy_emphasis) %>%    visualize() WoJ %>%    correlate(work_experience, autonomy_selection, autonomy_emphasis) %>%    to_correlation_matrix() #> # A tibble: 3 × 4 #>   r                  work_experience autonomy_selection autonomy_emphasis #> * <chr>                        <dbl>              <dbl>             <dbl> #> 1 work_experience              1                  0.161             0.155 #> 2 autonomy_selection           0.161              1                 0.644 #> 3 autonomy_emphasis            0.155              0.644             1"},{"path":"https://joon-e.github.io/tidycomm/articles/v02_bivariate.html","id":"compute-linear-regressions","dir":"Articles","previous_headings":"","what":"Compute linear regressions","title":"Bivariate analysis of continuous and/or categorical variables","text":"regress() create linear regression one dependent variable flexible number independent variables. Independent variables can thereby continuous, dichotomous, factorial (case factor level translated dichotomous dummy variable version): function automatically adds standardized beta values expected linear-regression output. can also opt calculate three precondition checks: linear regressions, number visualizations possible. default one visualization result(s), dependent variable correlated independent variables separately linear model presented :  Alternatively can visualize precondition-check-assisting depictions. Correlograms among independent variables, example:  Next , visualize residuals-versus-fitted plot determine distributions:  use (normal) probability-probability plot check multicollinearity:  (normal) quantile-quantile plot also helps checking multicollinearity focuses outliers:  Next , scale-location (sometimes also called spread-location) plot checks whether residuals spread equally help check homoscedasticity:  Finally, visualize residuals-versus-leverage plot check influential outliers affecting final model rest data:","code":"WoJ %>%    regress(autonomy_selection, work_experience, trust_government) #> # A tibble: 3 × 6 #>   Variable              B  StdErr    beta     t         p #> * <chr>             <dbl>   <dbl>   <dbl> <dbl>     <dbl> #> 1 (Intercept)      3.52   0.0906  NA      38.8  3.02e-213 #> 2 work_experience  0.0121 0.00211  0.164   5.72 1.35e-  8 #> 3 trust_government 0.0501 0.0271   0.0531  1.85 6.49e-  2 #> # F(2, 1181) = 17.400584, p = 0.000000, R-square = 0.028624 WoJ %>%    regress(autonomy_selection, work_experience, trust_government,           check_independenterrors = TRUE,           check_multicollinearity = TRUE,           check_homoscedasticity = TRUE) #> # A tibble: 3 × 8 #>   Variable              B  StdErr    beta     t         p   VIF tolerance #> * <chr>             <dbl>   <dbl>   <dbl> <dbl>     <dbl> <dbl>     <dbl> #> 1 (Intercept)      3.52   0.0906  NA      38.8  3.02e-213 NA       NA     #> 2 work_experience  0.0121 0.00211  0.164   5.72 1.35e-  8  1.01     0.995 #> 3 trust_government 0.0501 0.0271   0.0531  1.85 6.49e-  2  1.01     0.995 #> # F(2, 1181) = 17.400584, p = 0.000000, R-square = 0.028624 #> - Check for independent errors: Durbin-Watson = 1.928431 (p = 0.244000) #> - Check for homoscedasticity: Breusch-Pagan = 0.181605 (p = 0.669997) #> - Check for multicollinearity: VIF/tolerance added to output WoJ %>%    regress(autonomy_selection, work_experience, trust_government) %>%    visualize() WoJ %>%    regress(autonomy_selection, work_experience, trust_government) %>%    visualize(which = \"correlogram\") WoJ %>%    regress(autonomy_selection, work_experience, trust_government) %>%    visualize(which = \"resfit\") WoJ %>%    regress(autonomy_selection, work_experience, trust_government) %>%    visualize(which = \"pp\") WoJ %>%    regress(autonomy_selection, work_experience, trust_government) %>%    visualize(which = \"qq\") WoJ %>%    regress(autonomy_selection, work_experience, trust_government) %>%    visualize(which = \"scaloc\") WoJ %>%    regress(autonomy_selection, work_experience, trust_government) %>%    visualize(which = \"reslev\")"},{"path":"https://joon-e.github.io/tidycomm/articles/v03_reliability.html","id":"add-mean-and-sum-indices","dir":"Articles","previous_headings":"","what":"Add mean and sum indices","title":"Adding indices and computing reliability estimates","text":"add_index() adds mean index specified variables data. second (first, used pipe) argument name index variable created: create sum index instead, set type = \"sum\":","code":"WoJ %>%    add_index(ethical_flexibility, ethics_1, ethics_2, ethics_3, ethics_4) %>%   # Select variables of relevance for output   dplyr::select(ethical_flexibility, ethics_1, ethics_2, ethics_3, ethics_4) #> # A tibble: 1,200 × 5 #>    ethical_flexibility ethics_1 ethics_2 ethics_3 ethics_4 #>                  <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #>  1                2           2        3        2        1 #>  2                1.5         1        2        2        1 #>  3                2.25        2        4        2        1 #>  4                1.75        1        3        1        2 #>  5                2           2        3        2        1 #>  6                3.25        2        4        4        3 #>  7                2           1        3        2        2 #>  8                3.5         2        4        4        4 #>  9                1.75        1        2        1        3 #> 10                3.25        1        4        4        4 #> # ℹ 1,190 more rows WoJ %>%    add_index(ethical_flexibility, ethics_1, ethics_2, ethics_3, ethics_4, type = \"sum\") %>%   # Select variables of relevance for output   dplyr::select(ethical_flexibility, ethics_1, ethics_2, ethics_3, ethics_4) #> # A tibble: 1,200 × 5 #>    ethical_flexibility ethics_1 ethics_2 ethics_3 ethics_4 #>                  <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #>  1                   8        2        3        2        1 #>  2                   6        1        2        2        1 #>  3                   9        2        4        2        1 #>  4                   7        1        3        1        2 #>  5                   8        2        3        2        1 #>  6                  13        2        4        4        3 #>  7                   8        1        3        2        2 #>  8                  14        2        4        4        4 #>  9                   7        1        2        1        3 #> 10                  13        1        4        4        4 #> # ℹ 1,190 more rows"},{"path":"https://joon-e.github.io/tidycomm/articles/v03_reliability.html","id":"compute-reliability-estimates-of-created-indices","dir":"Articles","previous_headings":"","what":"Compute reliability estimates of created indices","title":"Adding indices and computing reliability estimates","text":"Use get_reliability() compute reliability/internal consistency estimates indices created add_index(). Passing arguments function automatically compute reliability estimates indices created add_index() found data output Cronbach’s α\\alpha along descriptives index information. want reliability estimates specific indices, pass names function arguments. Essentially, get_reliability() provides wrapper ci.reliability function MBESS package. Thus, arguments MBESS::ci.reliability() can passed get_reliability(). example, output ω\\omega instead Cronbach’s α\\alpha including robust maximum likelihood confidence intervals, can type: See function documentation info (don’t forget cite MBESS package using get_reliability()).","code":"# Add two indices to data WoJ <- WoJ %>%    add_index(ethical_flexibility, ethics_1, ethics_2, ethics_3, ethics_4) %>%   add_index(trust_in_politics, trust_parliament, trust_government, trust_parties, trust_politicians)  WoJ %>%    get_reliability() #> # A tibble: 2 × 5 #>   Index               Index_of                           M    SD Cronbachs_Alpha #> * <chr>               <chr>                          <dbl> <dbl>           <dbl> #> 1 ethical_flexibility ethics_1, ethics_2, ethics_3,…  2.45 0.777           0.612 #> 2 trust_in_politics   trust_parliament, trust_gover…  2.70 0.652           0.856 WoJ %>%    get_reliability(trust_in_politics) #> # A tibble: 1 × 5 #>   Index             Index_of                             M    SD Cronbachs_Alpha #> * <chr>             <chr>                            <dbl> <dbl>           <dbl> #> 1 trust_in_politics trust_parliament, trust_governm…  2.70 0.652           0.856 WoJ %>%    get_reliability(type = 'omega', interval.type = 'mlr') #> # A tibble: 2 × 8 #>   Index               Index_of                 M    SD Omega CI_LL CI_UL CI_Type #> * <chr>               <chr>                <dbl> <dbl> <dbl> <dbl> <dbl> <chr>   #> 1 ethical_flexibility ethics_1, ethics_2,…  2.45 0.777 0.626 0.590 0.663 robust… #> 2 trust_in_politics   trust_parliament, t…  2.70 0.652 0.856 0.840 0.871 robust…"},{"path":"https://joon-e.github.io/tidycomm/articles/v04_icr.html","id":"basic-use","dir":"Articles","previous_headings":"","what":"Basic use","title":"Intercoder reliability tests","text":"test_icr() computes various intercoder reliability estimates specified variables. first two arguments (pipe) unit-identifying variable coder-identifying variable, followed test variables: test variables specified, variables dataset (excluding unit coder variables) tested:","code":"fbposts %>%    test_icr(post_id, coder_id, pop_elite, pop_people, pop_othering) #> # A tibble: 3 × 8 #>   Variable     n_Units n_Coders n_Categories Level   Agreement Holstis_CR #> * <chr>          <int>    <int>        <int> <chr>       <dbl>      <dbl> #> 1 pop_elite         45        6            6 nominal     0.733      0.861 #> 2 pop_people        45        6            2 nominal     0.778      0.916 #> 3 pop_othering      45        6            4 nominal     0.867      0.945 #> # ℹ 1 more variable: Krippendorffs_Alpha <dbl> fbposts %>%    test_icr(post_id, coder_id) #> # A tibble: 5 × 8 #>   Variable     n_Units n_Coders n_Categories Level   Agreement Holstis_CR #> * <chr>          <int>    <int>        <int> <chr>       <dbl>      <dbl> #> 1 type              45        6            4 nominal     1          1     #> 2 n_pictures        45        6            7 nominal     0.822      0.930 #> 3 pop_elite         45        6            6 nominal     0.733      0.861 #> 4 pop_people        45        6            2 nominal     0.778      0.916 #> 5 pop_othering      45        6            4 nominal     0.867      0.945 #> # ℹ 1 more variable: Krippendorffs_Alpha <dbl>"},{"path":"https://joon-e.github.io/tidycomm/articles/v04_icr.html","id":"reliability-estimates","dir":"Articles","previous_headings":"","what":"Reliability estimates","title":"Intercoder reliability tests","text":"Currently, test_icr() supports following reliability estimates: agreement: Simple percent agreement. holsti: Holsti’s CRCR (mean pairwise percent agreement). kripp_alpha: Krippendorff’s α\\alpha. cohens_kappa: Cohen’s κ\\kappa (available two coders). fleiss_kappa: Fleiss’ κ\\kappa. brennan_prediger: Brennan & Prediger’s κ\\kappa (two coders, von Eye’s (2006) proposed extension multiple coders computed). default, test_icr() output simple percent agreement, Holsti’s CRCR, Krippendorff’s α\\alpha reliability estimates. can add estimates setting name TRUE function call (remove default ones setting FALSE):","code":"fbposts %>%    test_icr(post_id, coder_id, fleiss_kappa = TRUE, agreement = FALSE) #> # A tibble: 5 × 8 #>   Variable    n_Units n_Coders n_Categories Level Holstis_CR Krippendorffs_Alpha #> * <chr>         <int>    <int>        <int> <chr>      <dbl>               <dbl> #> 1 type             45        6            4 nomi…      1                   1     #> 2 n_pictures       45        6            7 nomi…      0.930               0.880 #> 3 pop_elite        45        6            6 nomi…      0.861               0.339 #> 4 pop_people       45        6            2 nomi…      0.916               0.287 #> 5 pop_otheri…      45        6            4 nomi…      0.945               0.566 #> # ℹ 1 more variable: Fleiss_Kappa <dbl>"},{"path":"https://joon-e.github.io/tidycomm/articles/v04_icr.html","id":"variable-levels","dir":"Articles","previous_headings":"","what":"Variable levels","title":"Intercoder reliability tests","text":"default, test_icr() assumes test variables nominal. can set variable levels passing named vector form c(variable_name = \"variable_level\") levels argument. Nominal test variables can represented either integer codes string labels, whereas ordinal variables must represented integer codes, interval/ratio variables must numeric (integer float). Please note currently computation Krippendorff’s α\\alpha influenced variable level.","code":"fbposts %>%    test_icr(post_id, coder_id, levels = c(n_pictures = \"ordinal\")) #> # A tibble: 5 × 8 #>   Variable     n_Units n_Coders n_Categories Level   Agreement Holstis_CR #> * <chr>          <int>    <int>        <int> <chr>       <dbl>      <dbl> #> 1 type              45        6            4 nominal     1          1     #> 2 n_pictures        45        6            7 ordinal     0.822      0.930 #> 3 pop_elite         45        6            6 nominal     0.733      0.861 #> 4 pop_people        45        6            2 nominal     0.778      0.916 #> 5 pop_othering      45        6            4 nominal     0.867      0.945 #> # ℹ 1 more variable: Krippendorffs_Alpha <dbl>"},{"path":"https://joon-e.github.io/tidycomm/articles/v04_icr.html","id":"missing-values","dir":"Articles","previous_headings":"","what":"Missing values","title":"Intercoder reliability tests","text":"Missing values intercoder reliability tests can ambiguous (coder forget code variable unit, missing value indicate none categories deemed fitting?) present obstacle several reliability estimates (currently implemented estimates, Krippendorff’s α\\alpha can deal missing values). Thus, test_icr() default respond warning NA values present test variables output NA reliability estimates Krippendorff’s α\\alpha: can set na.omit = TRUE exclude units NA values specific test variable computation variable:","code":"# Introduce some missing values fbposts$type[1] <- NA fbposts$type[2] <- NA fbposts$pop_elite[5] <- NA  fbposts %>%    test_icr(post_id, coder_id) #> Warning: Variable 'type' contains missing values. Consider setting na.omit = #> TRUE or recoding missing values #> Warning: Variable 'pop_elite' contains missing values. Consider setting na.omit #> = TRUE or recoding missing values #> # A tibble: 5 × 8 #>   Variable     n_Units n_Coders n_Categories Level   Agreement Holstis_CR #> * <chr>          <int>    <int>        <int> <chr>       <dbl>      <dbl> #> 1 type              45        6            4 nominal    NA         NA     #> 2 n_pictures        45        6            7 nominal     0.822      0.930 #> 3 pop_elite         45        6            6 nominal    NA         NA     #> 4 pop_people        45        6            2 nominal     0.778      0.916 #> 5 pop_othering      45        6            4 nominal     0.867      0.945 #> # ℹ 1 more variable: Krippendorffs_Alpha <dbl> fbposts %>%    test_icr(post_id, coder_id, na.omit = TRUE) #> # A tibble: 5 × 8 #>   Variable     n_Units n_Coders n_Categories Level   Agreement Holstis_CR #> * <chr>          <int>    <int>        <int> <chr>       <dbl>      <dbl> #> 1 type              44        6            4 nominal     1          1     #> 2 n_pictures        45        6            7 nominal     0.822      0.930 #> 3 pop_elite         44        6            6 nominal     0.727      0.858 #> 4 pop_people        45        6            2 nominal     0.778      0.916 #> 5 pop_othering      45        6            4 nominal     0.867      0.945 #> # ℹ 1 more variable: Krippendorffs_Alpha <dbl>"},{"path":"https://joon-e.github.io/tidycomm/articles/v04_icr.html","id":"hidden-missing-values","dir":"Articles","previous_headings":"","what":"‘Hidden’ missing values","title":"Intercoder reliability tests","text":"situations units coded multiple times, coders (e.g., research seminars). Consider following sample data: unit coded two times, coder coded units. Thus, units-coders matrix contain one NA value per (unit) row, indicating one coder code respective unit. Setting na.omit = TRUE test_icr() thus result empty units-coders matrix: relevant units coded coders, consider setting variable indicating coding per unit coder_id:","code":"data <- tibble::tibble(   unit = c(1, 1, 2, 2, 3, 3),   coder = c('a', 'b', 'a', 'c', 'b', 'c'),   code = c(1, 0, 1, 1, 0, 0) )  data #> # A tibble: 6 × 3 #>    unit coder  code #>   <dbl> <chr> <dbl> #> 1     1 a         1 #> 2     1 b         0 #> 3     2 a         1 #> 4     2 c         1 #> 5     3 b         0 #> 6     3 c         0 data %>%   test_icr(unit, coder, code, na.omit = TRUE) #> Error in `map()`: #> ℹ In index: 1. #> Caused by error: #> ! Empty units-coders matrix detected. This is most likely due to none of the units having been coded by all coders. See vignette('v04_icr') for details. data %>%    dplyr::group_by(unit) %>%    dplyr::mutate(coding = 1:dplyr::n()) %>%    dplyr::ungroup() %>%    test_icr(unit, coding, code) #> # A tibble: 1 × 8 #>   Variable n_Units n_Coders n_Categories Level   Agreement Holstis_CR #> * <chr>      <int>    <int>        <int> <chr>       <dbl>      <dbl> #> 1 code           3        2            2 nominal     0.667      0.667 #> # ℹ 1 more variable: Krippendorffs_Alpha <dbl>"},{"path":"https://joon-e.github.io/tidycomm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Julian Unkel. Author, maintainer. Mario Haim. Author. Lara Kobilke. Author.","code":""},{"path":"https://joon-e.github.io/tidycomm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Unkel J, Haim M, Kobilke L (2025). tidycomm: Data Modification Analysis Communication Research. R package version 0.4.1, https://joon-e.github.io/tidycomm/.","code":"@Manual{,   title = {tidycomm: Data Modification and Analysis for Communication Research},   author = {Julian Unkel and Mario Haim and Lara Kobilke},   year = {2025},   note = {R package version 0.4.1},   url = {https://joon-e.github.io/tidycomm/}, }"},{"path":"https://joon-e.github.io/tidycomm/index.html","id":"tidycomm-","dir":"","previous_headings":"","what":"Data Modification and Analysis for Communication Research","title":"Data Modification and Analysis for Communication Research","text":"Tidycomm provides convenience functions common tasks communication research. functions follow style syntax tidyverse. Currently, tidycomm includes functions various methods univariate bivariate data description analysis, data modification, visualization, intercoder reliability tests.","code":""},{"path":"https://joon-e.github.io/tidycomm/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data Modification and Analysis for Communication Research","text":"Install tidycomm CRAN: install recent development version tidycomm :","code":"install.packages(\"tidycomm\") # install.packages(\"pak\") pak::pak(\"tidycomm/tidycomm\")"},{"path":"https://joon-e.github.io/tidycomm/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Data Modification and Analysis for Communication Research","text":"tidycomm functions follow style syntax tidyverse functions: always assume tibble first argument always return tibble well, can easily integrated pipes data variables (tibble columns) passed function calls directly symbols functions automatically use relevant variables data variables specified function call. example, compute descriptive statistics numeric variables data, just call describe() without arguments: Likewise, compute intercoder reliability tests variables specifying post coder ID variables: Almost functions also come integrated visualizations. visualize results can easily just append visualize() end commands:  detailed examples, see following articles: Univariate analysis continuous categorical variables Bivariate analysis continuous /categorical variables Adding indices computing reliability estimates Intercoder reliability tests Modification scales","code":"library(tidycomm) WoJ %>% # Worlds of Journalism sample data   describe(autonomy_selection, autonomy_emphasis) #> # A tibble: 2 × 15 #>   Variable             N Missing     M    SD   Min   Q25   Mdn   Q75   Max Range #> * <chr>            <int>   <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1 autonomy_select…  1197       3  3.88 0.803     1     4     4     4     5     4 #> 2 autonomy_emphas…  1195       5  4.08 0.793     1     4     4     5     5     4 #> # ℹ 4 more variables: CI_95_LL <dbl>, CI_95_UL <dbl>, Skewness <dbl>, #> #   Kurtosis <dbl> WoJ %>%   describe() #> # A tibble: 11 × 15 #>    Variable           N Missing     M     SD   Min   Q25   Mdn   Q75   Max Range #>  * <chr>          <int>   <int> <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 autonomy_sele…  1197       3  3.88  0.803     1  4        4     4     5     4 #>  2 autonomy_emph…  1195       5  4.08  0.793     1  4        4     5     5     4 #>  3 ethics_1        1200       0  1.63  0.892     1  1        1     2     5     4 #>  4 ethics_2        1200       0  3.21  1.26      1  2        4     4     5     4 #>  5 ethics_3        1200       0  2.39  1.13      1  2        2     3     5     4 #>  6 ethics_4        1200       0  2.58  1.25      1  1.75     2     4     5     4 #>  7 work_experien…  1187      13 17.8  10.9       1  8       17    25    53    52 #>  8 trust_parliam…  1200       0  3.05  0.811     1  3        3     4     5     4 #>  9 trust_governm…  1200       0  2.82  0.854     1  2        3     3     5     4 #> 10 trust_parties   1200       0  2.42  0.736     1  2        2     3     4     3 #> 11 trust_politic…  1200       0  2.52  0.712     1  2        3     3     4     3 #> # ℹ 4 more variables: CI_95_LL <dbl>, CI_95_UL <dbl>, Skewness <dbl>, #> #   Kurtosis <dbl> fbposts %>% # Facebook post codings sample data   test_icr(post_id, coder_id) #> # A tibble: 5 × 8 #>   Variable     n_Units n_Coders n_Categories Level   Agreement Holstis_CR #> * <chr>          <int>    <int>        <int> <chr>       <dbl>      <dbl> #> 1 type              45        6            4 nominal     1          1     #> 2 n_pictures        45        6            7 nominal     0.822      0.930 #> 3 pop_elite         45        6            6 nominal     0.733      0.861 #> 4 pop_people        45        6            2 nominal     0.778      0.916 #> 5 pop_othering      45        6            4 nominal     0.867      0.945 #> # ℹ 1 more variable: Krippendorffs_Alpha <dbl> snscomments %>% # experimental social-media-post perception sample data   dplyr::filter(group == 3) %>%   t_test(     gender,     medium_evaluation,     article_evaluation,     comments_quality,     comments_valence   ) %>%   visualize()"},{"path":"https://joon-e.github.io/tidycomm/reference/WoJ.html","id":null,"dir":"Reference","previous_headings":"","what":"Worlds of Journalism sample data — WoJ","title":"Worlds of Journalism sample data — WoJ","text":"subset data Worlds Journalism 2012-16 study containing survey data 1,200 journalists five European countries.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/WoJ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Worlds of Journalism sample data — WoJ","text":"","code":"WoJ"},{"path":"https://joon-e.github.io/tidycomm/reference/WoJ.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Worlds of Journalism sample data — WoJ","text":"data frame 1200 rows 15 variables: country Country residence reach Reach medium employment Current employment situation temp_contract Type contract (current employment situation either full-time part-time autonomy_selection Autonomy news story selection, scale 1 (freedom ) 5 (complete freedom) autonomy_emphasis Autonomy news story emphasis, scale 1 (freedom ) 5 (complete freedom) ethics_1 Agreement statement \"Journalists always adhere codes professional ethics, regardless situation context\", scale 1 (strongly disagree) 5 (strongly agree) (reverse-coded!) ethics_2 Agreement statement \"ethical journalism depends specific situation.\", scale 1 (strongly disagree) 5 (strongly agree) ethics_3 Agreement statement \"ethical journalism matter personal judgment.\", scale 1 (strongly disagree) 5 (strongly agree) ethics_4 Agreement statement \"acceptable set aside moral standards extraordinary circumstances require .\", scale 1 (strongly disagree) 5 (strongly agree) work_experience Work experience journalist years trust_parliament Trust placed parliament, scale 1 (trust ) 5 (complete trust) trust_government Trust placed government, scale 1 (trust ) 5 (complete trust) trust_parties Trust placed parties, scale 1 (trust ) 5 (complete trust) trust_politicians Trust placed politicians general, scale 1 (trust ) 5 (complete trust)","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/WoJ.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Worlds of Journalism sample data — WoJ","text":"https://worldsofjournalism.org/data/data--key-tables-2012-2016","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/add_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Add index — add_index","title":"Add index — add_index","text":"Add rowwise mean sum index specific variables dataset.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/add_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add index — add_index","text":"","code":"add_index(data, name, ..., type = \"mean\", na.rm = TRUE, cast.numeric = FALSE)"},{"path":"https://joon-e.github.io/tidycomm/reference/add_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add index — add_index","text":"data tibble tdcmm model name Name index column compute. ... Variables used index. type Type index compute. Either \"mean\" (default) \"sum\". na.rm logical value indicating whether NA values stripped computation proceeds. Defaults TRUE. cast.numeric logical value indicating whether variables selected index computation converted numeric. Useful computing indices factor variables. Defaults FALSE.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/add_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add index — add_index","text":"tdcmm model","code":""},{"path":[]},{"path":"https://joon-e.github.io/tidycomm/reference/add_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add index — add_index","text":"","code":"WoJ %>% add_index(ethical_flexibility, ethics_1, ethics_2, ethics_3, ethics_4) #> # A tibble: 1,200 × 16 #>    country   reach employment temp_contract autonomy_selection autonomy_emphasis #>  * <fct>     <fct> <chr>      <fct>                      <dbl>             <dbl> #>  1 Germany   Nati… Full-time  Permanent                      5                 4 #>  2 Germany   Nati… Full-time  Permanent                      3                 4 #>  3 Switzerl… Regi… Full-time  Permanent                      4                 4 #>  4 Switzerl… Local Part-time  Permanent                      4                 5 #>  5 Austria   Nati… Part-time  Permanent                      4                 4 #>  6 Switzerl… Local Freelancer NA                             4                 4 #>  7 Germany   Local Full-time  Permanent                      4                 4 #>  8 Denmark   Nati… Full-time  Permanent                      3                 3 #>  9 Switzerl… Local Full-time  Permanent                      5                 5 #> 10 Denmark   Nati… Full-time  Permanent                      2                 4 #> # ℹ 1,190 more rows #> # ℹ 10 more variables: ethics_1 <dbl>, ethics_2 <dbl>, ethics_3 <dbl>, #> #   ethics_4 <dbl>, work_experience <dbl>, trust_parliament <dbl>, #> #   trust_government <dbl>, trust_parties <dbl>, trust_politicians <dbl>, #> #   ethical_flexibility <dbl> WoJ %>% add_index(ethical_flexibility, ethics_1, ethics_2, ethics_3, ethics_4, type = \"sum\") #> # A tibble: 1,200 × 16 #>    country   reach employment temp_contract autonomy_selection autonomy_emphasis #>  * <fct>     <fct> <chr>      <fct>                      <dbl>             <dbl> #>  1 Germany   Nati… Full-time  Permanent                      5                 4 #>  2 Germany   Nati… Full-time  Permanent                      3                 4 #>  3 Switzerl… Regi… Full-time  Permanent                      4                 4 #>  4 Switzerl… Local Part-time  Permanent                      4                 5 #>  5 Austria   Nati… Part-time  Permanent                      4                 4 #>  6 Switzerl… Local Freelancer NA                             4                 4 #>  7 Germany   Local Full-time  Permanent                      4                 4 #>  8 Denmark   Nati… Full-time  Permanent                      3                 3 #>  9 Switzerl… Local Full-time  Permanent                      5                 5 #> 10 Denmark   Nati… Full-time  Permanent                      2                 4 #> # ℹ 1,190 more rows #> # ℹ 10 more variables: ethics_1 <dbl>, ethics_2 <dbl>, ethics_3 <dbl>, #> #   ethics_4 <dbl>, work_experience <dbl>, trust_parliament <dbl>, #> #   trust_government <dbl>, trust_parties <dbl>, trust_politicians <dbl>, #> #   ethical_flexibility <dbl>"},{"path":"https://joon-e.github.io/tidycomm/reference/categorize_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Categorize numeric variables into categories — categorize_scale","title":"Categorize numeric variables into categories — categorize_scale","text":"function recodes one numeric variables categorical variables based specified lower end, upper end, intermediate breaks. intervals created include right endpoint interval. example, breaks = c(2, 3) lower_end = 1 upper_end = 5 creates intervals 1 <= 2, >2 <= 3, >3 <= 5. lower upper ends provided, function defaults minimum maximum values data issues warning. default behavior prone errors, however, scale may include actual lower upper ends might turn affect recoding process. Hence, strongly suggested manually set lower upper bounds original continuous scale.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/categorize_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categorize numeric variables into categories — categorize_scale","text":"","code":"categorize_scale(   data,   ...,   breaks,   labels,   lower_end = NULL,   upper_end = NULL,   name = NULL,   overwrite = FALSE )"},{"path":"https://joon-e.github.io/tidycomm/reference/categorize_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Categorize numeric variables into categories — categorize_scale","text":"data tibble tdcmm model. ... Variables recode factor variables categories. variables specified, numeric columns recoded. breaks vector numeric values specifying breaks categorizing data lower upper ends. breaks define boundaries intervals. Setting parameter required. labels vector string labels interval. number labels must match number intervals defined breaks lower/upper ends.Setting parameter required. lower_end Optional numeric value specifying lower end scale. provided, defaults minimum value data. upper_end Optional numeric value specifying upper end scale. provided, defaults maximum value data. name Optional string specifying name new variable(s). default, new variable names original variable names suffixed _cat. overwrite Logical indicating whether overwrite original variable(s) new categorical variables. TRUE, original variable(s) overwritten.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/categorize_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Categorize numeric variables into categories — categorize_scale","text":"modified tibble tdcmm model recoded variables.","code":""},{"path":[]},{"path":"https://joon-e.github.io/tidycomm/reference/categorize_scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Categorize numeric variables into categories — categorize_scale","text":"","code":"WoJ %>% dplyr::select(trust_parliament, trust_politicians) %>% categorize_scale(trust_parliament, trust_politicians, lower_end = 1, upper_end = 5, breaks = c(2, 3), labels = c(\"Low\", \"Medium\", \"High\"), overwrite = FALSE) #> # A tibble: 1,200 × 4 #>    trust_parliament trust_politicians trust_parliament_cat trust_politicians_cat #>  *            <dbl>             <dbl> <fct>                <fct>                 #>  1                3                 3 Medium               Medium                #>  2                4                 3 High                 Medium                #>  3                4                 3 High                 Medium                #>  4                4                 3 High                 Medium                #>  5                3                 2 Medium               Low                   #>  6                4                 2 High                 Low                   #>  7                2                 2 Low                  Low                   #>  8                4                 3 High                 Medium                #>  9                1                 1 Low                  Low                   #> 10                3                 3 Medium               Medium                #> # ℹ 1,190 more rows WoJ %>% dplyr::select(autonomy_selection) %>% categorize_scale(autonomy_selection, breaks = c(2, 3, 4), lower_end = 1, upper_end = 5, labels = c(\"Low\", \"Medium\", \"High\", \"Very High\"), name = \"autonomy_in_categories\") #> # A tibble: 1,200 × 2 #>    autonomy_selection autonomy_in_categories_1 #>  *              <dbl> <fct>                    #>  1                  5 Very High                #>  2                  3 Medium                   #>  3                  4 High                     #>  4                  4 High                     #>  5                  4 High                     #>  6                  4 High                     #>  7                  4 High                     #>  8                  3 Medium                   #>  9                  5 Very High                #> 10                  2 Low                      #> # ℹ 1,190 more rows"},{"path":"https://joon-e.github.io/tidycomm/reference/center_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Center numeric, continuous variables — center_scale","title":"Center numeric, continuous variables — center_scale","text":"function centers specified numeric columns numeric columns none specified. centered scale mean 0.0.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/center_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Center numeric, continuous variables — center_scale","text":"","code":"center_scale(data, ..., name = NULL, overwrite = FALSE)"},{"path":"https://joon-e.github.io/tidycomm/reference/center_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Center numeric, continuous variables — center_scale","text":"data tibble tdcmm model. ... Numeric variables centered. none provided, numeric columns centered. name Optional name new centered variable single variable provided. default, name original variable name suffixed _centered. overwrite Logical. TRUE, overwrites original variable(s) centered values. FALSE (default), new variable(s) created.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/center_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Center numeric, continuous variables — center_scale","text":"tdcmm model centered variable(s).","code":""},{"path":[]},{"path":"https://joon-e.github.io/tidycomm/reference/center_scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Center numeric, continuous variables — center_scale","text":"","code":"WoJ %>% dplyr::select(autonomy_emphasis) %>% center_scale(autonomy_emphasis) #> # A tibble: 1,200 × 2 #>    autonomy_emphasis autonomy_emphasis_centered #>  *             <dbl>                      <dbl> #>  1                 4                    -0.0762 #>  2                 4                    -0.0762 #>  3                 4                    -0.0762 #>  4                 5                     0.924  #>  5                 4                    -0.0762 #>  6                 4                    -0.0762 #>  7                 4                    -0.0762 #>  8                 3                    -1.08   #>  9                 5                     0.924  #> 10                 4                    -0.0762 #> # ℹ 1,190 more rows WoJ %>% center_scale(autonomy_emphasis, name = \"my_centered_variable\") #> # A tibble: 1,200 × 16 #>    country   reach employment temp_contract autonomy_selection autonomy_emphasis #>  * <fct>     <fct> <chr>      <fct>                      <dbl>             <dbl> #>  1 Germany   Nati… Full-time  Permanent                      5                 4 #>  2 Germany   Nati… Full-time  Permanent                      3                 4 #>  3 Switzerl… Regi… Full-time  Permanent                      4                 4 #>  4 Switzerl… Local Part-time  Permanent                      4                 5 #>  5 Austria   Nati… Part-time  Permanent                      4                 4 #>  6 Switzerl… Local Freelancer NA                             4                 4 #>  7 Germany   Local Full-time  Permanent                      4                 4 #>  8 Denmark   Nati… Full-time  Permanent                      3                 3 #>  9 Switzerl… Local Full-time  Permanent                      5                 5 #> 10 Denmark   Nati… Full-time  Permanent                      2                 4 #> # ℹ 1,190 more rows #> # ℹ 10 more variables: ethics_1 <dbl>, ethics_2 <dbl>, ethics_3 <dbl>, #> #   ethics_4 <dbl>, work_experience <dbl>, trust_parliament <dbl>, #> #   trust_government <dbl>, trust_parties <dbl>, trust_politicians <dbl>, #> #   my_centered_variable <dbl> WoJ %>% center_scale(overwrite = TRUE) #> NOTE: No variables provided. All numeric columns will be centered. #> # A tibble: 1,200 × 15 #>    country   reach employment temp_contract autonomy_selection autonomy_emphasis #>  * <fct>     <fct> <chr>      <fct>                      <dbl>             <dbl> #>  1 Germany   Nati… Full-time  Permanent                  1.12            -0.0762 #>  2 Germany   Nati… Full-time  Permanent                 -0.876           -0.0762 #>  3 Switzerl… Regi… Full-time  Permanent                  0.124           -0.0762 #>  4 Switzerl… Local Part-time  Permanent                  0.124            0.924  #>  5 Austria   Nati… Part-time  Permanent                  0.124           -0.0762 #>  6 Switzerl… Local Freelancer NA                         0.124           -0.0762 #>  7 Germany   Local Full-time  Permanent                  0.124           -0.0762 #>  8 Denmark   Nati… Full-time  Permanent                 -0.876           -1.08   #>  9 Switzerl… Local Full-time  Permanent                  1.12             0.924  #> 10 Denmark   Nati… Full-time  Permanent                 -1.88            -0.0762 #> # ℹ 1,190 more rows #> # ℹ 9 more variables: ethics_1 <dbl>, ethics_2 <dbl>, ethics_3 <dbl>, #> #   ethics_4 <dbl>, work_experience <dbl>, trust_parliament <dbl>, #> #   trust_government <dbl>, trust_parties <dbl>, trust_politicians <dbl> WoJ %>%   center_scale(autonomy_emphasis) %>%   tab_frequencies(autonomy_emphasis, autonomy_emphasis_centered) #> # A tibble: 6 × 6 #>   autonomy_emphasis autonomy_emphasis_centered     n percent cum_n cum_percent #> *             <dbl>                      <dbl> <int>   <dbl> <int>       <dbl> #> 1                 1                    -3.08      10 0.00833    10     0.00833 #> 2                 2                    -2.08      36 0.03       46     0.0383  #> 3                 3                    -1.08     165 0.138     211     0.176   #> 4                 4                    -0.0762   626 0.522     837     0.698   #> 5                 5                     0.924    358 0.298    1195     0.996   #> 6                NA                    NA          5 0.00417  1200     1"},{"path":"https://joon-e.github.io/tidycomm/reference/correlate.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute correlation coefficients — correlate","title":"Compute correlation coefficients — correlate","text":"Computes correlation coefficients combinations specified variables. variables specified, numeric (integer double) variables used.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/correlate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute correlation coefficients — correlate","text":"","code":"correlate(data, ..., method = \"pearson\", partial = NULL, with = NULL)"},{"path":"https://joon-e.github.io/tidycomm/reference/correlate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute correlation coefficients — correlate","text":"data tibble tdcmm model ... Variables compute correlations (column names). Leave empty compute numeric variables data. method character string indicating correlation coefficient computed. One \"pearson\" (default), \"kendall\", \"spearman\" partial Specifies variable used control partial correlation. default, parameter set NULL, indicating control variable used correlation. used, must set NULL (default). Specifies focus variable correlate variables . default, parameter set NULL, indicating focus variable used correlation. used, partial must set NULL (default).","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/correlate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute correlation coefficients — correlate","text":"tdcmm model","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/correlate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute correlation coefficients — correlate","text":"","code":"WoJ %>% correlate(ethics_1, ethics_2, ethics_3) #> # A tibble: 3 × 6 #>   x        y            r    df        p     n #> * <chr>    <chr>    <dbl> <int>    <dbl> <int> #> 1 ethics_1 ethics_2 0.172  1198 2.04e- 9  1200 #> 2 ethics_1 ethics_3 0.165  1198 8.44e- 9  1200 #> 3 ethics_2 ethics_3 0.409  1198 1.05e-49  1200 WoJ %>% correlate() #> # A tibble: 55 × 6 #>    x                  y                        r    df         p     n #>  * <chr>              <chr>                <dbl> <int>     <dbl> <int> #>  1 autonomy_selection autonomy_emphasis  0.644    1192 4.83e-141  1194 #>  2 autonomy_selection ethics_1          -0.0766   1195 7.98e-  3  1197 #>  3 autonomy_selection ethics_2          -0.0274   1195 3.43e-  1  1197 #>  4 autonomy_selection ethics_3          -0.0257   1195 3.73e-  1  1197 #>  5 autonomy_selection ethics_4          -0.0781   1195 6.89e-  3  1197 #>  6 autonomy_selection work_experience    0.161    1182 2.71e-  8  1184 #>  7 autonomy_selection trust_parliament  -0.00840  1195 7.72e-  1  1197 #>  8 autonomy_selection trust_government   0.0414   1195 1.53e-  1  1197 #>  9 autonomy_selection trust_parties      0.0269   1195 3.52e-  1  1197 #> 10 autonomy_selection trust_politicians  0.0109   1195 7.07e-  1  1197 #> # ℹ 45 more rows WoJ %>% correlate(ethics_1, ethics_2, ethics_3, with = work_experience) #> # A tibble: 3 × 6 #>   x               y              r    df             p     n #> * <chr>           <chr>      <dbl> <int>         <dbl> <int> #> 1 work_experience ethics_1 -0.103   1185 0.000387       1187 #> 2 work_experience ethics_2 -0.168   1185 0.00000000619  1187 #> 3 work_experience ethics_3 -0.0442  1185 0.128          1187 WoJ %>% correlate(autonomy_selection, autonomy_emphasis, partial = work_experience) #> # A tibble: 1 × 7 #>   x                  y                 z                 r    df         p     n #> * <chr>              <chr>             <chr>         <dbl> <dbl>     <dbl> <int> #> 1 autonomy_selection autonomy_emphasis work_experie… 0.637  1178 3.07e-135  1181 WoJ %>% correlate(with = work_experience) #> Warning: At least one of work_experience and country is not numeric, skipping computation. #> Warning: At least one of work_experience and reach is not numeric, skipping computation. #> Warning: At least one of work_experience and employment is not numeric, skipping computation. #> Warning: At least one of work_experience and temp_contract is not numeric, skipping computation. #> # A tibble: 10 × 6 #>    x               y                         r    df             p     n #>  * <chr>           <chr>                 <dbl> <int>         <dbl> <int> #>  1 work_experience autonomy_selection  0.161    1182 0.0000000271   1184 #>  2 work_experience autonomy_emphasis   0.155    1180 0.0000000887   1182 #>  3 work_experience ethics_1           -0.103    1185 0.000387       1187 #>  4 work_experience ethics_2           -0.168    1185 0.00000000619  1187 #>  5 work_experience ethics_3           -0.0442   1185 0.128          1187 #>  6 work_experience ethics_4           -0.116    1185 0.0000602      1187 #>  7 work_experience trust_parliament   -0.00941  1185 0.746          1187 #>  8 work_experience trust_government   -0.0708   1185 0.0146         1187 #>  9 work_experience trust_parties      -0.0454   1185 0.118          1187 #> 10 work_experience trust_politicians  -0.00976  1185 0.737          1187"},{"path":"https://joon-e.github.io/tidycomm/reference/crosstab.html","id":null,"dir":"Reference","previous_headings":"","what":"Crosstab variables — crosstab","title":"Crosstab variables — crosstab","text":"Computes contingency table one independent (column) variable one dependent (row) variables.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/crosstab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crosstab variables — crosstab","text":"","code":"crosstab(   data,   col_var,   ...,   add_total = FALSE,   percentages = FALSE,   chi_square = FALSE )"},{"path":"https://joon-e.github.io/tidycomm/reference/crosstab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crosstab variables — crosstab","text":"data tibble tdcmm model col_var Independent (column) variable. ... Dependent (row) variables. add_total Logical indicating whether 'Total' column computed. Defaults FALSE. percentages Logical indicating whether output column-wise percentages instead absolute values. Defaults FALSE. chi_square Logical indicating whether Chi-square test computed. Test results reported via message(). Defaults FALSE.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/crosstab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crosstab variables — crosstab","text":"tdcmm model","code":""},{"path":[]},{"path":"https://joon-e.github.io/tidycomm/reference/crosstab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Crosstab variables — crosstab","text":"","code":"WoJ %>% crosstab(reach, employment) #> # A tibble: 3 × 5 #>   employment Local Regional National Transnational #> * <chr>      <dbl>    <dbl>    <dbl>         <dbl> #> 1 Freelancer    23       36      104             9 #> 2 Full-time    111      287      438            66 #> 3 Part-time     15       32       75             4 WoJ %>% crosstab(reach, employment, add_total = TRUE, percentages = TRUE, chi_square = TRUE) #> # A tibble: 3 × 6 #>   employment Local Regional National Transnational Total #> * <chr>      <dbl>    <dbl>    <dbl>         <dbl> <dbl> #> 1 Freelancer 0.154   0.101     0.169        0.114  0.143 #> 2 Full-time  0.745   0.808     0.710        0.835  0.752 #> 3 Part-time  0.101   0.0901    0.122        0.0506 0.105 #> # Chi-square = 16.005, df = 6, p = 0.014, V = 0.082"},{"path":"https://joon-e.github.io/tidycomm/reference/describe.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe numeric variables — describe","title":"Describe numeric variables — describe","text":"Describe numeric variables several measures central tendency variability. variables specified, numeric (integer double) variables described.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/describe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe numeric variables — describe","text":"","code":"describe(data, ..., na.rm = TRUE)"},{"path":"https://joon-e.github.io/tidycomm/reference/describe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe numeric variables — describe","text":"data tibble tdcmm model ... Variables describe (column names). Leave empty describe numeric variables data. na.rm logical value indicating whether NA values stripped computation proceeds. Defaults TRUE.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/describe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe numeric variables — describe","text":"tdcmm model","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/describe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Describe numeric variables — describe","text":"N: number valid cases (.e., missing) Missing: number NA cases M: mean average SD: standard deviation, sd Min: minimum value, min Q25: 25% quantile, quantile Mdn: median average, 50% quantile Q75: 75% quantile, quantile Max: maximum value, max Range: difference Min Max CI_95_LL: \\(M - Q(0.975) \\times \\frac{SD}{\\sqrt{N}}\\) \\(Q(0.975)\\) denotes Student t's stats::quantile function probability \\(0.975\\) \\(N-1\\) degrees freedom CI_95_UL: \\(M + Q(0.975) \\times \\frac{SD}{\\sqrt{N}}\\) \\(Q(0.975)\\) denotes Student t's stats::quantile function probability \\(0.975\\) \\(N-1\\) degrees freedom Skewness: traditional Fisher-Pearson coefficient skewness valid cases per \\(\\frac{\\frac{1}{N} \\sum\\limits_{=1}^N (x_{}-\\overline{x})^3}{[\\frac{1}{N}\\sum\\limits_{=1}^N (x_{}-\\overline{x})^2]^{3/2}}\\) \\(\\overline{x}\\) denotes \\(M\\), following Doane & Seward (2011, p. 6, 1a). See DOI doi:10.1080/10691898.2011.11889611 . Kurtosis: empirical sample kurtosis (.e., standardized fourth population moment mean) per \\(\\frac{\\sum (x-\\overline{x})^4 / N}{(\\sum (x-\\overline{x})^2 / N)^2}\\), following DeCarlo (1997, p. 292, b2). See DOI doi:10.1037/1082-989X.2.3.292 .","code":""},{"path":[]},{"path":"https://joon-e.github.io/tidycomm/reference/describe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe numeric variables — describe","text":"","code":"WoJ %>% describe(autonomy_selection, autonomy_emphasis, work_experience) #> # A tibble: 3 × 15 #>   Variable            N Missing     M     SD   Min   Q25   Mdn   Q75   Max Range #> * <chr>           <int>   <int> <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1 autonomy_selec…  1197       3  3.88  0.803     1     4     4     4     5     4 #> 2 autonomy_empha…  1195       5  4.08  0.793     1     4     4     5     5     4 #> 3 work_experience  1187      13 17.8  10.9       1     8    17    25    53    52 #> # ℹ 4 more variables: CI_95_LL <dbl>, CI_95_UL <dbl>, Skewness <dbl>, #> #   Kurtosis <dbl> fbposts %>% describe(n_pictures) #> # A tibble: 1 × 15 #>   Variable       N Missing     M    SD   Min   Q25   Mdn   Q75   Max Range #> * <chr>      <int>   <int> <dbl> <dbl> <int> <dbl> <dbl> <dbl> <int> <int> #> 1 n_pictures   270       0 0.952  1.47     0     0     1     1    12    12 #> # ℹ 4 more variables: CI_95_LL <dbl>, CI_95_UL <dbl>, Skewness <dbl>, #> #   Kurtosis <dbl>"},{"path":"https://joon-e.github.io/tidycomm/reference/describe_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe categorical variables — describe_cat","title":"Describe categorical variables — describe_cat","text":"Describe categorical variables N, number unique values, mode. Note case multiple modes, first mode order values chosen.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/describe_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe categorical variables — describe_cat","text":"","code":"describe_cat(data, ...)"},{"path":"https://joon-e.github.io/tidycomm/reference/describe_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe categorical variables — describe_cat","text":"data tibble tdcmm model ... Variables describe (column names). Leave empty describe categorical variables data.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/describe_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe categorical variables — describe_cat","text":"tdcmm model","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/describe_cat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Describe categorical variables — describe_cat","text":"variables specified, categorical (character factor) variables described. N: number valid cases (.e., missing) Missing: number NA cases Unique: number unique categories given variable, without Missing Mode: mode average (multiple modes exist, first mode order values returned) Mode_N: number cases reflecting Mode","code":""},{"path":[]},{"path":"https://joon-e.github.io/tidycomm/reference/describe_cat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe categorical variables — describe_cat","text":"","code":"WoJ %>% describe_cat(reach, employment, temp_contract) #> # A tibble: 3 × 6 #>   Variable          N Missing Unique Mode      Mode_N #> * <chr>         <int>   <int>  <dbl> <chr>      <int> #> 1 reach          1200       0      4 National     617 #> 2 employment     1200       0      3 Full-time    902 #> 3 temp_contract  1001     199      2 Permanent    948 fbposts %>% describe_cat(type) #> # A tibble: 1 × 6 #>   Variable     N Missing Unique Mode  Mode_N #> * <chr>    <int>   <int>  <dbl> <chr>  <int> #> 1 type       270       0      4 photo    162"},{"path":"https://joon-e.github.io/tidycomm/reference/design_gray.html","id":null,"dir":"Reference","previous_headings":"","what":"Gray design — design_gray","title":"Gray design — design_gray","text":"Gray design","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/design_gray.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gray design — design_gray","text":"","code":"design_gray()"},{"path":"https://joon-e.github.io/tidycomm/reference/design_gray.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gray design — design_gray","text":"list main_color_1, vector 12 main_colors, corresponding main_contrast_1 (color text write top main color) corresponding main_contrasts, main_size (lines), comparison_linetype, comparison_color, comparison_size lines act comparative lines, ggplot2 theme","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/design_grey.html","id":null,"dir":"Reference","previous_headings":"","what":"Grey design — design_grey","title":"Grey design — design_grey","text":"Grey design","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/design_grey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grey design — design_grey","text":"","code":"design_grey()"},{"path":"https://joon-e.github.io/tidycomm/reference/design_grey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grey design — design_grey","text":"list main_color_1, vector 12 main_colors, corresponding main_contrast_1 (color text write top main color) corresponding main_contrasts, main_size (lines), comparison_linetype, comparison_color, comparison_size lines act comparative lines, ggplot2 theme","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/design_lmu.html","id":null,"dir":"Reference","previous_headings":"","what":"Colorbrewer-inspired design with focus on LMU (lmu.de) green — design_lmu","title":"Colorbrewer-inspired design with focus on LMU (lmu.de) green — design_lmu","text":"Colorbrewer-inspired design focus LMU (lmu.de) green","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/design_lmu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colorbrewer-inspired design with focus on LMU (lmu.de) green — design_lmu","text":"","code":"design_lmu()"},{"path":"https://joon-e.github.io/tidycomm/reference/design_lmu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Colorbrewer-inspired design with focus on LMU (lmu.de) green — design_lmu","text":"list main_color_1, vector 12 main_colors, corresponding main_contrast_1 (color text write top main color) corresponding main_contrasts, main_size (lines), comparison_linetype, comparison_color, comparison_size lines act comparative lines, ggplot2 theme","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/dummify_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert categorical variables to dummy variables — dummify_scale","title":"Convert categorical variables to dummy variables — dummify_scale","text":"function transforms specified categorical variables dummy variables. level categorical variable represented new dummy variable. Missing values retained. new dummy variables appended original data frame. function allow specifying new column names dummy variables. Instead, follows consistent naming pattern: new dummy variables named using original variable name category value appended. example, categorical variable named \"autonomy\" levels \"low\", \"medium\", \"high\" dummified, new dummy variables named \"autonomy_low\", \"autonomy_medium\", \"autonomy_high\".","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/dummify_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert categorical variables to dummy variables — dummify_scale","text":"","code":"dummify_scale(data, ..., overwrite = FALSE)"},{"path":"https://joon-e.github.io/tidycomm/reference/dummify_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert categorical variables to dummy variables — dummify_scale","text":"data tibble tdcmm model. ... Categorical variables transformed dummy variables. Category names automatically appended newly created dummy variables. overwrite Logical. TRUE, overwrites original variable(s) dummy variables. FALSE (default), new variables created.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/dummify_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert categorical variables to dummy variables — dummify_scale","text":"tdcmm model dummy variables appended.","code":""},{"path":[]},{"path":"https://joon-e.github.io/tidycomm/reference/dummify_scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert categorical variables to dummy variables — dummify_scale","text":"","code":"WoJ %>% dplyr::select(temp_contract) %>% dummify_scale(temp_contract) #> # A tibble: 1,200 × 3 #>    temp_contract temp_contract_permanent temp_contract_temporary #>  * <fct>                           <int>                   <int> #>  1 Permanent                           1                       0 #>  2 Permanent                           1                       0 #>  3 Permanent                           1                       0 #>  4 Permanent                           1                       0 #>  5 Permanent                           1                       0 #>  6 NA                                 NA                      NA #>  7 Permanent                           1                       0 #>  8 Permanent                           1                       0 #>  9 Permanent                           1                       0 #> 10 Permanent                           1                       0 #> # ℹ 1,190 more rows WoJ %>% categorize_scale(autonomy_emphasis, breaks = c(2, 3), labels = c('low', 'medium', 'high')) %>% dummify_scale(autonomy_emphasis_cat) %>% dplyr::select(starts_with('autonomy_emphasis')) #> Warning: Lower and/or upper end missing. Based on the minimum and maximum values observed in the data, the original scale (autonomy_emphasis) is assumed to range from 1 to 5. To prevent this warning, please provide the lower_end and upper_end values as arguments when calling the function. #> # A tibble: 1,200 × 5 #>    autonomy_emphasis autonomy_emphasis_cat autonomy_emphasis_cat_low #>                <dbl> <fct>                                     <int> #>  1                 4 high                                          0 #>  2                 4 high                                          0 #>  3                 4 high                                          0 #>  4                 5 high                                          0 #>  5                 4 high                                          0 #>  6                 4 high                                          0 #>  7                 4 high                                          0 #>  8                 3 medium                                        0 #>  9                 5 high                                          0 #> 10                 4 high                                          0 #> # ℹ 1,190 more rows #> # ℹ 2 more variables: autonomy_emphasis_cat_medium <int>, #> #   autonomy_emphasis_cat_high <int>"},{"path":"https://joon-e.github.io/tidycomm/reference/expand_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand a range with a multiplicative or additive constant — expand_range","title":"Expand a range with a multiplicative or additive constant — expand_range","text":"Expand range multiplicative additive constant","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/expand_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand a range with a multiplicative or additive constant — expand_range","text":"","code":"expand_range(range, mul = 0, add = 0, zero_width = 1)"},{"path":"https://joon-e.github.io/tidycomm/reference/expand_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand a range with a multiplicative or additive constant — expand_range","text":"range range data, numeric vector length 2 mul multiplicative constant add additive constant zero_width distance use range zero width","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/fbposts.html","id":null,"dir":"Reference","previous_headings":"","what":"Facebook posts reliability test — fbposts","title":"Facebook posts reliability test — fbposts","text":"45 political facebook posts coded 6 coders intercoder reliability test, focused populist messages.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/fbposts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facebook posts reliability test — fbposts","text":"","code":"fbposts"},{"path":"https://joon-e.github.io/tidycomm/reference/fbposts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Facebook posts reliability test — fbposts","text":"data frame 270 rows 7 variables post_id Numeric id coded Facebook post coder_id Numeric id coder type Type Facebook post, one \"link\", \"photo\", \"status\", \"video n_pictures Amount pictures attached post, ranges 0 6 pop_elite Populism indicator: Facebook post attack elites?, 0 = \"attacks elites\", 1 = \"attacks political actors\", 2 = \"attacks public administration actors\", 3 = \"attacks economical actors\", 4 = \"attacks media actors/journalists\", 9 = \"attacks elites\" pop_people Populism indicator: Facebook refer 'people'?, 0 = \"refer 'people'\", 1 = \"refers 'people'\" pop_othering Populism indicator: Facebook attack 'others'?, 0 = \"attacks 'others'\", 1 = \"attacks cultures\", 2 = \"attacks political stances\", 3 = \"attacks 'others'\"","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/get_reliability.html","id":null,"dir":"Reference","previous_headings":"","what":"Get reliability estimates of index variables — get_reliability","title":"Get reliability estimates of index variables — get_reliability","text":"Get reliability estimates index variables created add_index.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/get_reliability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get reliability estimates of index variables — get_reliability","text":"","code":"get_reliability(   data,   ...,   type = \"alpha\",   interval.type = NULL,   bootstrap.samples = NULL,   conf.level = NULL,   progress = FALSE )"},{"path":"https://joon-e.github.io/tidycomm/reference/get_reliability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get reliability estimates of index variables — get_reliability","text":"data tibble tdcmm model ... Index variables created add_index. Leave empty get reliability estimates index variables. type Type reliability estimate. See ci.reliability interval.type Type reliability estimate confidence interval. See ci.reliability bootstrap.samples Number bootstrap samples CI calculation. See ci.reliability conf.level Confidence level estimate CI. See ci.reliability progress Show progress reliability estimate computation. Useful using computationally intense computations (e. g., many bootstrapping samples) many index variables.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/get_reliability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get reliability estimates of index variables — get_reliability","text":"tdcmm model","code":""},{"path":[]},{"path":"https://joon-e.github.io/tidycomm/reference/get_reliability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get reliability estimates of index variables — get_reliability","text":"","code":"WoJ %>%   add_index(ethical_flexibility, ethics_1, ethics_2, ethics_3, ethics_4) %>%   get_reliability() #> # A tibble: 1 × 5 #>   Index               Index_of                           M    SD Cronbachs_Alpha #> * <chr>               <chr>                          <dbl> <dbl>           <dbl> #> 1 ethical_flexibility ethics_1, ethics_2, ethics_3,…  2.45 0.777           0.612"},{"path":"https://joon-e.github.io/tidycomm/reference/incvlcomments.html","id":null,"dir":"Reference","previous_headings":"","what":"Incivil Comments Data — incvlcomments","title":"Incivil Comments Data — incvlcomments","text":"dataset preregistered factorial survey experiment nationally representative sample 964 German online users. Participants presented manipulated user comments included statements associated incivil discourse (profanity attacks arguments) intolerant discourse (offensive stereotyping violent threats). Participants rated comments, e.g. offensiveness, harm society, intention delete comment containing statement.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/incvlcomments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Incivil Comments Data — incvlcomments","text":"","code":"incvlcomments"},{"path":"https://joon-e.github.io/tidycomm/reference/incvlcomments.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Incivil Comments Data — incvlcomments","text":"data frame 3856 observations nested 964 participants 22 variables: participant_num Numeric id participant age Age participant male Gender participant, either 'male' 'male' high_education Level formal education participant, either 'high formal education' 'low formal education' comment_num Numeric id comment participant exposed issue subject comment participant exposed , either 'Gender', 'Abortion', 'Climate', 'Migration' profanity Whether comment contained profanities indicator incivility attacks_argument Whether comment contained attacks towards arguments indicator incivility offensive_stereotyping Whether comment contained offensive stereotypes indicator intolerant discourse violent_threats Whether comment contained violent threats indicator intolerant discourse offensiveness Rate statement whether comment perceived offensive & hostile (Scale 1 7) adequacy Rate statement whether comment perceived necessary & accurate (Scale 1 7) harm_to_society Rate statement whether comment perceived harmful society (Scale 1 7) deletion_intention Whether participant wants delete comment similarity_poster similar participant feels person created post (Scale 1 7) similarity_group similar participant feels group people criticized post (Scale 1 7) attitude_gender Rate agreement statements gender policies (Scale 1 7) attitude_abortion Rate agreement statements abortion (Scale 1 7) attitude_migration Rate agreement statements migration (Scale 1 7) attitude_climate Rate agreement statements climate change (Scale 1 7) left_right_placement Placement political spectrum left right (Scale 1 9) freedom_of_speech Rate agreement statements freedom speech expression (Scale 1 7)","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/incvlcomments.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Incivil Comments Data — incvlcomments","text":"https://osf.io/w92vj","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/incvlcomments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Incivil Comments Data — incvlcomments","text":"dataset created OSF project: Differential perceptions reactions incivil intolerant user comments, corresponding paper: Kümpel, . S., Unkel, J (2023). Differential perceptions reactions incivil intolerant user comments, Journal Computer-Mediated Communication, Volume 28, Issue 4, https://doi.org/10.1093/jcmc/zmad018","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/minmax_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescale numeric continuous variables to new minimum/maximum boundaries — minmax_scale","title":"Rescale numeric continuous variables to new minimum/maximum boundaries — minmax_scale","text":"Given specified minimum maximum, function translates value new value within specified range. transformation maintains relative distances values, resulting changes mean standard deviations. However, original scale transformed scale z-standardized, equal , indicating relative positions distributions values remain consistent.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/minmax_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescale numeric continuous variables to new minimum/maximum boundaries — minmax_scale","text":"","code":"minmax_scale(   data,   ...,   change_to_min = 0,   change_to_max = 1,   name = NULL,   overwrite = FALSE )"},{"path":"https://joon-e.github.io/tidycomm/reference/minmax_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescale numeric continuous variables to new minimum/maximum boundaries — minmax_scale","text":"data tibble tdcmm model. ... Numeric variables min-max scaled. none provided, numeric columns scaled. change_to_min desired minimum value scaling. change_to_max desired maximum value scaling. name Optional name new scaled variable single variable provided. default, name original variable name suffixed range. example, \"variable\" becomes \"variable_3to5\". Negative values prefixed \"neg\" avoid invalid columns names (e.g., -3 3 becomes \"variable_neg3to5\"). overwrite Logical. TRUE, overwrites original variable(s) scaled values. FALSE (default), new variable(s) created.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/minmax_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rescale numeric continuous variables to new minimum/maximum boundaries — minmax_scale","text":"tdcmm model min-max scaled variable(s).","code":""},{"path":[]},{"path":"https://joon-e.github.io/tidycomm/reference/minmax_scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rescale numeric continuous variables to new minimum/maximum boundaries — minmax_scale","text":"","code":"WoJ %>% minmax_scale(autonomy_emphasis, change_to_min = 0, change_to_max = 1) #> # A tibble: 1,200 × 16 #>    country   reach employment temp_contract autonomy_selection autonomy_emphasis #>  * <fct>     <fct> <chr>      <fct>                      <dbl>             <dbl> #>  1 Germany   Nati… Full-time  Permanent                      5                 4 #>  2 Germany   Nati… Full-time  Permanent                      3                 4 #>  3 Switzerl… Regi… Full-time  Permanent                      4                 4 #>  4 Switzerl… Local Part-time  Permanent                      4                 5 #>  5 Austria   Nati… Part-time  Permanent                      4                 4 #>  6 Switzerl… Local Freelancer NA                             4                 4 #>  7 Germany   Local Full-time  Permanent                      4                 4 #>  8 Denmark   Nati… Full-time  Permanent                      3                 3 #>  9 Switzerl… Local Full-time  Permanent                      5                 5 #> 10 Denmark   Nati… Full-time  Permanent                      2                 4 #> # ℹ 1,190 more rows #> # ℹ 10 more variables: ethics_1 <dbl>, ethics_2 <dbl>, ethics_3 <dbl>, #> #   ethics_4 <dbl>, work_experience <dbl>, trust_parliament <dbl>, #> #   trust_government <dbl>, trust_parties <dbl>, trust_politicians <dbl>, #> #   autonomy_emphasis_0to1 <dbl> WoJ %>% minmax_scale(autonomy_emphasis, name = \"my_scaled_variable\", change_to_min = 0, change_to_max = 1) #> # A tibble: 1,200 × 16 #>    country   reach employment temp_contract autonomy_selection autonomy_emphasis #>  * <fct>     <fct> <chr>      <fct>                      <dbl>             <dbl> #>  1 Germany   Nati… Full-time  Permanent                      5                 4 #>  2 Germany   Nati… Full-time  Permanent                      3                 4 #>  3 Switzerl… Regi… Full-time  Permanent                      4                 4 #>  4 Switzerl… Local Part-time  Permanent                      4                 5 #>  5 Austria   Nati… Part-time  Permanent                      4                 4 #>  6 Switzerl… Local Freelancer NA                             4                 4 #>  7 Germany   Local Full-time  Permanent                      4                 4 #>  8 Denmark   Nati… Full-time  Permanent                      3                 3 #>  9 Switzerl… Local Full-time  Permanent                      5                 5 #> 10 Denmark   Nati… Full-time  Permanent                      2                 4 #> # ℹ 1,190 more rows #> # ℹ 10 more variables: ethics_1 <dbl>, ethics_2 <dbl>, ethics_3 <dbl>, #> #   ethics_4 <dbl>, work_experience <dbl>, trust_parliament <dbl>, #> #   trust_government <dbl>, trust_parties <dbl>, trust_politicians <dbl>, #> #   my_scaled_variable <dbl> WoJ %>%   minmax_scale(autonomy_emphasis, change_to_min = 0, change_to_max = 1) %>%   tab_frequencies(autonomy_emphasis, autonomy_emphasis_0to1) #> # A tibble: 6 × 6 #>   autonomy_emphasis autonomy_emphasis_0to1     n percent cum_n cum_percent #> *             <dbl>                  <dbl> <int>   <dbl> <int>       <dbl> #> 1                 1                   0       10 0.00833    10     0.00833 #> 2                 2                   0.25    36 0.03       46     0.0383  #> 3                 3                   0.5    165 0.138     211     0.176   #> 4                 4                   0.75   626 0.522     837     0.698   #> 5                 5                   1      358 0.298    1195     0.996   #> 6                NA                  NA        5 0.00417  1200     1"},{"path":"https://joon-e.github.io/tidycomm/reference/model.html","id":null,"dir":"Reference","previous_headings":"","what":"Access model(s) used to estimate output — model","title":"Access model(s) used to estimate output — model","text":"Returns model objects used estimate tdcmm output.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access model(s) used to estimate output — model","text":"","code":"model(x, ...)"},{"path":"https://joon-e.github.io/tidycomm/reference/model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access model(s) used to estimate output — model","text":"x tdcmm output ... arguments","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access model(s) used to estimate output — model","text":"model object list model objects","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/new_tdcmm.html","id":null,"dir":"Reference","previous_headings":"","what":"tdcmm output constructor — new_tdcmm","title":"tdcmm output constructor — new_tdcmm","text":"Creates new tdcmm class output object. tdcmm class subclass tbl_df, also know \"tibble\", used augmenting output tibbles tidycomm functions additional information. output based statistical tests, model object(s) estimated performed assumption checks. tdcmm objects tidycomm subclassed individual classes handling visualization printing per \"output\" type.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/new_tdcmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tdcmm output constructor — new_tdcmm","text":"","code":"new_tdcmm(x, func, data, model = NULL, checks = NULL, params = list())  is_tdcmm(x)"},{"path":"https://joon-e.github.io/tidycomm/reference/new_tdcmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tdcmm output constructor — new_tdcmm","text":"x tibble. func Function name called produced model. data tibble served input function. model list model object(s) used preparation output. Defaults NULL. single model wrapped list length 1. checks list assumption check object(s) used preparation output. Defaults NULL. params named list parameters originally passed call. Defaults empty list.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/new_tdcmm.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"tdcmm output constructor — new_tdcmm","text":"is_tdcmm(): Test class tdcmm","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/oob.html","id":null,"dir":"Reference","previous_headings":"","what":"Out of bounds handling — oob","title":"Out of bounds handling — oob","text":"set functions modify data values outside given range. oob_*() functions designed passed oob argument ggplot2 continuous binned scales, oob_discard exception. functions affect bounds values following ways: oob_censor() replaces bounds values NAs. default oob argument continuous scales. oob_censor_any() acts like oob_censor(), also replaces infinite values NAs. oob_squish() replaces bounds values nearest limit. default oob argument binned scales. oob_squish_any() acts like oob_squish(), also replaces infinite values nearest limit. oob_squish_infinite() replaces infinite values nearest limit. oob_keep() adjust bounds values. position scales, behaves zooming limits without data removal. oob_discard() removes bounds values input. suitable ggplot2 scales.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/oob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Out of bounds handling — oob","text":"","code":"oob_censor(x, range = c(0, 1), only.finite = TRUE)  oob_censor_any(x, range = c(0, 1))  oob_discard(x, range = c(0, 1))  oob_squish(x, range = c(0, 1), only.finite = TRUE)  oob_squish_any(x, range = c(0, 1))  oob_squish_infinite(x, range = c(0, 1))  oob_keep(x, range = c(0, 1))  censor(x, range = c(0, 1), only.finite = TRUE)  discard(x, range = c(0, 1))  squish(x, range = c(0, 1), only.finite = TRUE)  squish_infinite(x, range = c(0, 1))"},{"path":"https://joon-e.github.io/tidycomm/reference/oob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Out of bounds handling — oob","text":"x numeric vector values modify. range numeric vector length two giving minimum maximum limit desired output range respectively. .finite logical length one. TRUE, finite values altered. FALSE, also infinite values altered.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/oob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Out of bounds handling — oob","text":"oob_() functions return vector numerical values length x argument, wherein bounds values modified. oob_discard() returns vector less equal length x argument.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/oob.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Out of bounds handling — oob","text":"oob_censor_any() oob_squish_any() functions oob_censor() oob_squish() .finite argument set FALSE. Replacing position values NAs, oob_censor() , typically lead removal datapoints ggplot. Setting ggplot coordinate limits equivalent using oob_keep() position scales.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/oob.html","id":"old-interface","dir":"Reference","previous_headings":"","what":"Old interface","title":"Out of bounds handling — oob","text":"censor(), squish(), squish_infinite() discard() longer recommended; please use oob_censor(), oob_squish(), oob_squish_infinite() oob_discard() instead.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/oob.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Out of bounds handling — oob","text":"oob_squish(): Homer Strong homer.strong@gmail.com","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/percentage_labeller.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for labelling purposes — percentage_labeller","title":"Helper function for labelling purposes — percentage_labeller","text":"Helper function labelling purposes","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/percentage_labeller.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for labelling purposes — percentage_labeller","text":"","code":"percentage_labeller(x)"},{"path":"https://joon-e.github.io/tidycomm/reference/percentage_labeller.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for labelling purposes — percentage_labeller","text":"x share 0 1","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/percentage_labeller.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for labelling purposes — percentage_labeller","text":"string formatted % (rounded suffixed)","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://joon-e.github.io/tidycomm/reference/recode_cat_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode one or more categorical variables into new categories — recode_cat_scale","title":"Recode one or more categorical variables into new categories — recode_cat_scale","text":"function transforms one categorical variables new categories based specified mapping. unmatched cases specified mapping, default value can assigned. Missing values retained.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/recode_cat_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode one or more categorical variables into new categories — recode_cat_scale","text":"","code":"recode_cat_scale(   data,   ...,   assign = NULL,   other = NA,   overwrite = FALSE,   name = NULL )"},{"path":"https://joon-e.github.io/tidycomm/reference/recode_cat_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode one or more categorical variables into new categories — recode_cat_scale","text":"data tibble tdcmm model. ... Variables recode. assign named vector names old values values new values assigned. value unmatched cases. default, NA. parameter used assign value cases match keys assign vector. overwrite Logical. TRUE, overwrites original variable(s). specify 'name' 'overwrite' parameters simultaneously. name name new variable(s). specified, name provided variable(s) suffixed _rec.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/recode_cat_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode one or more categorical variables into new categories — recode_cat_scale","text":"tdcmm model tibble.","code":""},{"path":[]},{"path":"https://joon-e.github.io/tidycomm/reference/recode_cat_scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode one or more categorical variables into new categories — recode_cat_scale","text":"","code":"WoJ %>% recode_cat_scale(country, assign = c(\"Germany\" = 1, \"Switzerland\" = 2), overwrite = TRUE) #> The following unassigned values were found in country : Austria, Denmark, UK . They were recoded to the 'other' value ( NA ). #> # A tibble: 1,200 × 15 #>    country reach   employment temp_contract autonomy_selection autonomy_emphasis #>  * <fct>   <fct>   <chr>      <fct>                      <dbl>             <dbl> #>  1 1       Nation… Full-time  Permanent                      5                 4 #>  2 1       Nation… Full-time  Permanent                      3                 4 #>  3 2       Region… Full-time  Permanent                      4                 4 #>  4 2       Local   Part-time  Permanent                      4                 5 #>  5 NA      Nation… Part-time  Permanent                      4                 4 #>  6 2       Local   Freelancer NA                             4                 4 #>  7 1       Local   Full-time  Permanent                      4                 4 #>  8 NA      Nation… Full-time  Permanent                      3                 3 #>  9 2       Local   Full-time  Permanent                      5                 5 #> 10 NA      Nation… Full-time  Permanent                      2                 4 #> # ℹ 1,190 more rows #> # ℹ 9 more variables: ethics_1 <dbl>, ethics_2 <dbl>, ethics_3 <dbl>, #> #   ethics_4 <dbl>, work_experience <dbl>, trust_parliament <dbl>, #> #   trust_government <dbl>, trust_parties <dbl>, trust_politicians <dbl> WoJ %>% recode_cat_scale(country, assign = c(\"Germany\" = \"german\", \"Switzerland\" = \"swiss\"), other = \"other\", overwrite = TRUE) #> The following unassigned values were found in country : Austria, Denmark, UK . They were recoded to the 'other' value ( other ). #> # A tibble: 1,200 × 15 #>    country reach   employment temp_contract autonomy_selection autonomy_emphasis #>  * <fct>   <fct>   <chr>      <fct>                      <dbl>             <dbl> #>  1 german  Nation… Full-time  Permanent                      5                 4 #>  2 german  Nation… Full-time  Permanent                      3                 4 #>  3 swiss   Region… Full-time  Permanent                      4                 4 #>  4 swiss   Local   Part-time  Permanent                      4                 5 #>  5 other   Nation… Part-time  Permanent                      4                 4 #>  6 swiss   Local   Freelancer NA                             4                 4 #>  7 german  Local   Full-time  Permanent                      4                 4 #>  8 other   Nation… Full-time  Permanent                      3                 3 #>  9 swiss   Local   Full-time  Permanent                      5                 5 #> 10 other   Nation… Full-time  Permanent                      2                 4 #> # ℹ 1,190 more rows #> # ℹ 9 more variables: ethics_1 <dbl>, ethics_2 <dbl>, ethics_3 <dbl>, #> #   ethics_4 <dbl>, work_experience <dbl>, trust_parliament <dbl>, #> #   trust_government <dbl>, trust_parties <dbl>, trust_politicians <dbl> WoJ %>% recode_cat_scale(ethics_1, ethics_2, assign = c(`1` = 5, `2` = 4, `3` = 3, `4` = 2, `5` = 1), other = 6, overwrite = TRUE) #> # A tibble: 1,200 × 15 #>    country   reach employment temp_contract autonomy_selection autonomy_emphasis #>  * <fct>     <fct> <chr>      <fct>                      <dbl>             <dbl> #>  1 Germany   Nati… Full-time  Permanent                      5                 4 #>  2 Germany   Nati… Full-time  Permanent                      3                 4 #>  3 Switzerl… Regi… Full-time  Permanent                      4                 4 #>  4 Switzerl… Local Part-time  Permanent                      4                 5 #>  5 Austria   Nati… Part-time  Permanent                      4                 4 #>  6 Switzerl… Local Freelancer NA                             4                 4 #>  7 Germany   Local Full-time  Permanent                      4                 4 #>  8 Denmark   Nati… Full-time  Permanent                      3                 3 #>  9 Switzerl… Local Full-time  Permanent                      5                 5 #> 10 Denmark   Nati… Full-time  Permanent                      2                 4 #> # ℹ 1,190 more rows #> # ℹ 9 more variables: ethics_1 <fct>, ethics_2 <fct>, ethics_3 <dbl>, #> #   ethics_4 <dbl>, work_experience <dbl>, trust_parliament <dbl>, #> #   trust_government <dbl>, trust_parties <dbl>, trust_politicians <dbl> WoJ %>% recode_cat_scale(ethics_1, ethics_2, assign = c(`1` = \"very low\", `2` = \"low\", `3` = \"medium\", `4` = \"high\", `5` = \"very high\"), overwrite = TRUE) #> # A tibble: 1,200 × 15 #>    country   reach employment temp_contract autonomy_selection autonomy_emphasis #>  * <fct>     <fct> <chr>      <fct>                      <dbl>             <dbl> #>  1 Germany   Nati… Full-time  Permanent                      5                 4 #>  2 Germany   Nati… Full-time  Permanent                      3                 4 #>  3 Switzerl… Regi… Full-time  Permanent                      4                 4 #>  4 Switzerl… Local Part-time  Permanent                      4                 5 #>  5 Austria   Nati… Part-time  Permanent                      4                 4 #>  6 Switzerl… Local Freelancer NA                             4                 4 #>  7 Germany   Local Full-time  Permanent                      4                 4 #>  8 Denmark   Nati… Full-time  Permanent                      3                 3 #>  9 Switzerl… Local Full-time  Permanent                      5                 5 #> 10 Denmark   Nati… Full-time  Permanent                      2                 4 #> # ℹ 1,190 more rows #> # ℹ 9 more variables: ethics_1 <fct>, ethics_2 <fct>, ethics_3 <dbl>, #> #   ethics_4 <dbl>, work_experience <dbl>, trust_parliament <dbl>, #> #   trust_government <dbl>, trust_parties <dbl>, trust_politicians <dbl> WoJ %>% dplyr::select(temp_contract) %>% recode_cat_scale(temp_contract, assign = c(`Permanent` = \"P\", `Temporary` = \"T\"), other = \"O\") #> # A tibble: 1,200 × 2 #>    temp_contract temp_contract_rec #>  * <fct>         <fct>             #>  1 Permanent     P                 #>  2 Permanent     P                 #>  3 Permanent     P                 #>  4 Permanent     P                 #>  5 Permanent     P                 #>  6 NA            NA                #>  7 Permanent     P                 #>  8 Permanent     P                 #>  9 Permanent     P                 #> 10 Permanent     P                 #> # ℹ 1,190 more rows"},{"path":"https://joon-e.github.io/tidycomm/reference/regress.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute linear regression — regress","title":"Compute linear regression — regress","text":"Computes linear regression independent variables specified dependent variable. Linear modeling multiple independent variables uses stepwise regression modeling. specified, preconditions (multi-)collinearity homoscedasticity checked.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/regress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute linear regression — regress","text":"","code":"regress(   data,   dependent_var,   ...,   check_independenterrors = FALSE,   check_multicollinearity = FALSE,   check_homoscedasticity = FALSE )"},{"path":"https://joon-e.github.io/tidycomm/reference/regress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute linear regression — regress","text":"data tibble tdcmm model dependent_var dependent variable linear model fitted. Specify column name. ... Independent variables take account (one many) predictors dependent variable. Specify column names. least one specified. check_independenterrors set, independence errors among two cases checked using Durbin-Watson test check_multicollinearity set, multicollinearity among specified independent variables checked using variance inflation factor (VIF) tolerance (1/VIF); check can performed least two independent variables provided, provided variables need numeric check_homoscedasticity set, homoscedasticity checked using Breusch-Pagan test","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/regress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute linear regression — regress","text":"tdcmm model","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/regress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute linear regression — regress","text":"","code":"WoJ %>% regress(autonomy_selection, ethics_1) #> # A tibble: 2 × 6 #>   Variable          B StdErr    beta     t       p #> * <chr>         <dbl>  <dbl>   <dbl> <dbl>   <dbl> #> 1 (Intercept)  3.99   0.0481 NA      82.9  0       #> 2 ethics_1    -0.0689 0.0259 -0.0766 -2.66 0.00798 #> # F(1, 1195) = 7.061023, p = 0.007983, R-square = 0.005874 WoJ %>% regress(autonomy_selection, work_experience, trust_government) #> # A tibble: 3 × 6 #>   Variable              B  StdErr    beta     t         p #> * <chr>             <dbl>   <dbl>   <dbl> <dbl>     <dbl> #> 1 (Intercept)      3.52   0.0906  NA      38.8  3.02e-213 #> 2 work_experience  0.0121 0.00211  0.164   5.72 1.35e-  8 #> 3 trust_government 0.0501 0.0271   0.0531  1.85 6.49e-  2 #> # F(2, 1181) = 17.400584, p = 0.000000, R-square = 0.028624"},{"path":"https://joon-e.github.io/tidycomm/reference/rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescale continuous vector to have specified minimum and maximum — rescale","title":"Rescale continuous vector to have specified minimum and maximum — rescale","text":"Rescale continuous vector specified minimum maximum","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescale continuous vector to have specified minimum and maximum — rescale","text":"","code":"rescale(x, to, from, ...)  # S3 method for class 'numeric' rescale(x, to = c(0, 1), from = range(x, na.rm = TRUE, finite = TRUE), ...)  # S3 method for class 'dist' rescale(x, to = c(0, 1), from = range(x, na.rm = TRUE, finite = TRUE), ...)  # S3 method for class 'logical' rescale(x, to = c(0, 1), from = range(x, na.rm = TRUE, finite = TRUE), ...)  # S3 method for class 'POSIXt' rescale(x, to = c(0, 1), from = range(x, na.rm = TRUE, finite = TRUE), ...)  # S3 method for class 'Date' rescale(x, to = c(0, 1), from = range(x, na.rm = TRUE, finite = TRUE), ...)  # S3 method for class 'integer64' rescale(x, to = c(0, 1), from = range(x, na.rm = TRUE), ...)"},{"path":"https://joon-e.github.io/tidycomm/reference/rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescale continuous vector to have specified minimum and maximum — rescale","text":"x continuous vector values manipulate. output range (numeric vector length two) input range (vector length two).  given, calculated range x ... arguments passed methods","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/rescale_max.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescale numeric vector to have specified maximum — rescale_max","title":"Rescale numeric vector to have specified maximum — rescale_max","text":"Rescale numeric vector specified maximum","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/rescale_max.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescale numeric vector to have specified maximum — rescale_max","text":"","code":"rescale_max(x, to = c(0, 1), from = range(x, na.rm = TRUE))"},{"path":"https://joon-e.github.io/tidycomm/reference/rescale_max.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescale numeric vector to have specified maximum — rescale_max","text":"x numeric vector values manipulate. output range (numeric vector length two) input range (numeric vector length two).  given, calculated range x","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/rescale_mid.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescale vector to have specified minimum, midpoint, and maximum — rescale_mid","title":"Rescale vector to have specified minimum, midpoint, and maximum — rescale_mid","text":"Rescale vector specified minimum, midpoint, maximum","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/rescale_mid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescale vector to have specified minimum, midpoint, and maximum — rescale_mid","text":"","code":"rescale_mid(x, to, from, mid, ...)  # S3 method for class 'numeric' rescale_mid(x, to = c(0, 1), from = range(x, na.rm = TRUE), mid = 0, ...)  # S3 method for class 'logical' rescale_mid(x, to = c(0, 1), from = range(x, na.rm = TRUE), mid = 0, ...)  # S3 method for class 'dist' rescale_mid(x, to = c(0, 1), from = range(x, na.rm = TRUE), mid = 0, ...)  # S3 method for class 'POSIXt' rescale_mid(x, to = c(0, 1), from = range(x, na.rm = TRUE), mid, ...)  # S3 method for class 'Date' rescale_mid(x, to = c(0, 1), from = range(x, na.rm = TRUE), mid, ...)  # S3 method for class 'integer64' rescale_mid(x, to = c(0, 1), from = range(x, na.rm = TRUE), mid = 0, ...)"},{"path":"https://joon-e.github.io/tidycomm/reference/rescale_mid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescale vector to have specified minimum, midpoint, and maximum — rescale_mid","text":"x vector values manipulate. output range (numeric vector length two) input range (vector length two).  given, calculated range x mid mid-point input range ... arguments passed methods","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/rescale_none.html","id":null,"dir":"Reference","previous_headings":"","what":"Don't perform rescaling — rescale_none","title":"Don't perform rescaling — rescale_none","text":"perform rescaling","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/rescale_none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Don't perform rescaling — rescale_none","text":"","code":"rescale_none(x, ...)"},{"path":"https://joon-e.github.io/tidycomm/reference/rescale_none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Don't perform rescaling — rescale_none","text":"x numeric vector values manipulate. ... arguments ignored","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/reverse_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse numeric, logical, or date/time continuous variables — reverse_scale","title":"Reverse numeric, logical, or date/time continuous variables — reverse_scale","text":"Reverses continuous scale new variable. 5-1 scale thus turns 1-5 scale. Missing values retained. given continuous variable lower upper end scale provided. provided, function assumes scale's minimum maximum value represent lower/upper ends (issues warning fact). default behavior prone errors, however, scale may include actual lower upper ends might turn affect correct reversing. Hence, strongly suggested manually set lower upper bounds original continuous scale.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/reverse_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse numeric, logical, or date/time continuous variables — reverse_scale","text":"","code":"reverse_scale(   data,   ...,   lower_end = NULL,   upper_end = NULL,   name = NULL,   overwrite = FALSE )"},{"path":"https://joon-e.github.io/tidycomm/reference/reverse_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse numeric, logical, or date/time continuous variables — reverse_scale","text":"data tibble tdcmm model. ... Numeric variables reverse scaled. none provided, numeric columns scaled. lower_end Lower end provided continuous scale (default use minimum value current values, might actual lower end scale). upper_end Upper end provided continuous scale (default use maximum value current values, might actual upper end scale). name Optional name new reversed variable single variable provided. default, name original variable name suffixed _rev. overwrite Logical. TRUE, overwrites original variable(s) reversed values. FALSE (default), new variable(s) created.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/reverse_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse numeric, logical, or date/time continuous variables — reverse_scale","text":"tdcmm model reversed variable(s).","code":""},{"path":[]},{"path":"https://joon-e.github.io/tidycomm/reference/reverse_scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse numeric, logical, or date/time continuous variables — reverse_scale","text":"","code":"WoJ %>% reverse_scale(autonomy_emphasis, lower_end = 0, upper_end = 1) #> # A tibble: 1,200 × 16 #>    country   reach employment temp_contract autonomy_selection autonomy_emphasis #>  * <fct>     <fct> <chr>      <fct>                      <dbl>             <dbl> #>  1 Germany   Nati… Full-time  Permanent                      5                 4 #>  2 Germany   Nati… Full-time  Permanent                      3                 4 #>  3 Switzerl… Regi… Full-time  Permanent                      4                 4 #>  4 Switzerl… Local Part-time  Permanent                      4                 5 #>  5 Austria   Nati… Part-time  Permanent                      4                 4 #>  6 Switzerl… Local Freelancer NA                             4                 4 #>  7 Germany   Local Full-time  Permanent                      4                 4 #>  8 Denmark   Nati… Full-time  Permanent                      3                 3 #>  9 Switzerl… Local Full-time  Permanent                      5                 5 #> 10 Denmark   Nati… Full-time  Permanent                      2                 4 #> # ℹ 1,190 more rows #> # ℹ 10 more variables: ethics_1 <dbl>, ethics_2 <dbl>, ethics_3 <dbl>, #> #   ethics_4 <dbl>, work_experience <dbl>, trust_parliament <dbl>, #> #   trust_government <dbl>, trust_parties <dbl>, trust_politicians <dbl>, #> #   autonomy_emphasis_rev <dbl> WoJ %>% reverse_scale(autonomy_emphasis, name = \"my_reversed_variable\", lower_end = 0, upper_end = 1) #> # A tibble: 1,200 × 16 #>    country   reach employment temp_contract autonomy_selection autonomy_emphasis #>  * <fct>     <fct> <chr>      <fct>                      <dbl>             <dbl> #>  1 Germany   Nati… Full-time  Permanent                      5                 4 #>  2 Germany   Nati… Full-time  Permanent                      3                 4 #>  3 Switzerl… Regi… Full-time  Permanent                      4                 4 #>  4 Switzerl… Local Part-time  Permanent                      4                 5 #>  5 Austria   Nati… Part-time  Permanent                      4                 4 #>  6 Switzerl… Local Freelancer NA                             4                 4 #>  7 Germany   Local Full-time  Permanent                      4                 4 #>  8 Denmark   Nati… Full-time  Permanent                      3                 3 #>  9 Switzerl… Local Full-time  Permanent                      5                 5 #> 10 Denmark   Nati… Full-time  Permanent                      2                 4 #> # ℹ 1,190 more rows #> # ℹ 10 more variables: ethics_1 <dbl>, ethics_2 <dbl>, ethics_3 <dbl>, #> #   ethics_4 <dbl>, work_experience <dbl>, trust_parliament <dbl>, #> #   trust_government <dbl>, trust_parties <dbl>, trust_politicians <dbl>, #> #   my_reversed_variable <dbl> WoJ %>% reverse_scale(overwrite = TRUE) #> NOTE: No variables provided. All numeric columns will be reversed. #> Warning: Lower and/or upper end missing. Based on the minimum and maximum values observed in the data, the original scale (autonomy_selection) is assumed to range from 1 to 5. To prevent this warning, please provide the lower_end and upper_end values as arguments when calling the function. #> # A tibble: 1,200 × 15 #>    country   reach employment temp_contract autonomy_selection autonomy_emphasis #>  * <fct>     <fct> <chr>      <fct>                      <dbl>             <dbl> #>  1 Germany   Nati… Full-time  Permanent                      1                 2 #>  2 Germany   Nati… Full-time  Permanent                      3                 2 #>  3 Switzerl… Regi… Full-time  Permanent                      2                 2 #>  4 Switzerl… Local Part-time  Permanent                      2                 1 #>  5 Austria   Nati… Part-time  Permanent                      2                 2 #>  6 Switzerl… Local Freelancer NA                             2                 2 #>  7 Germany   Local Full-time  Permanent                      2                 2 #>  8 Denmark   Nati… Full-time  Permanent                      3                 3 #>  9 Switzerl… Local Full-time  Permanent                      1                 1 #> 10 Denmark   Nati… Full-time  Permanent                      4                 2 #> # ℹ 1,190 more rows #> # ℹ 9 more variables: ethics_1 <dbl>, ethics_2 <dbl>, ethics_3 <dbl>, #> #   ethics_4 <dbl>, work_experience <dbl>, trust_parliament <dbl>, #> #   trust_government <dbl>, trust_parties <dbl>, trust_politicians <dbl> WoJ %>%   reverse_scale(autonomy_emphasis, lower_end = 0, upper_end = 1) %>%   tab_frequencies(autonomy_emphasis, autonomy_emphasis_rev) #> # A tibble: 6 × 6 #>   autonomy_emphasis autonomy_emphasis_rev     n percent cum_n cum_percent #> *             <dbl>                 <dbl> <int>   <dbl> <int>       <dbl> #> 1                 1                     0    10 0.00833    10     0.00833 #> 2                 2                    NA    36 0.03       46     0.0383  #> 3                 3                    NA   165 0.138     211     0.176   #> 4                 4                    NA   626 0.522     837     0.698   #> 5                 5                    NA   358 0.298    1195     0.996   #> 6                NA                    NA     5 0.00417  1200     1"},{"path":"https://joon-e.github.io/tidycomm/reference/setna_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Set specified values to NA in selected variables or entire data frame — setna_scale","title":"Set specified values to NA in selected variables or entire data frame — setna_scale","text":"function allows users set specific values NA chosen variables within data frame. can handle numeric, character, factor variables.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/setna_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set specified values to NA in selected variables or entire data frame — setna_scale","text":"","code":"setna_scale(data, ..., value, name = NULL, overwrite = FALSE)"},{"path":"https://joon-e.github.io/tidycomm/reference/setna_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set specified values to NA in selected variables or entire data frame — setna_scale","text":"data tibble tdcmm model. ... One variables specified values set NA. variables provided, function applied entire data frame. value value (vector values) needs set NA. name name new variable(s). default, name provided variable(s) suffixed _na. overwrite Logical. TRUE, overwrites original variable(s). specify 'name' 'overwrite' parameters simultaneously.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/setna_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set specified values to NA in selected variables or entire data frame — setna_scale","text":"tdcmm model tibble.","code":""},{"path":[]},{"path":"https://joon-e.github.io/tidycomm/reference/setna_scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set specified values to NA in selected variables or entire data frame — setna_scale","text":"","code":"WoJ %>% dplyr::select(autonomy_emphasis) %>% setna_scale(autonomy_emphasis, value = 5) #> # A tibble: 1,200 × 2 #>    autonomy_emphasis autonomy_emphasis_na #>  *             <dbl>                <dbl> #>  1                 4                    4 #>  2                 4                    4 #>  3                 4                    4 #>  4                 5                   NA #>  5                 4                    4 #>  6                 4                    4 #>  7                 4                    4 #>  8                 3                    3 #>  9                 5                   NA #> 10                 4                    4 #> # ℹ 1,190 more rows WoJ %>% dplyr::select(autonomy_emphasis) %>% setna_scale(autonomy_emphasis, value = 5, name = \"new_na_autonomy\") #> # A tibble: 1,200 × 2 #>    autonomy_emphasis new_na_autonomy #>  *             <dbl>           <dbl> #>  1                 4               4 #>  2                 4               4 #>  3                 4               4 #>  4                 5              NA #>  5                 4               4 #>  6                 4               4 #>  7                 4               4 #>  8                 3               3 #>  9                 5              NA #> 10                 4               4 #> # ℹ 1,190 more rows WoJ %>% setna_scale(value = c(2, 3, 4), overwrite = TRUE) #> NOTE: No variables provided. All columns that fit the value type will receive updates to their missing values (NA).FALSE #> # A tibble: 1,200 × 15 #>    country   reach employment temp_contract autonomy_selection autonomy_emphasis #>  * <fct>     <fct> <chr>      <fct>                      <dbl>             <dbl> #>  1 Germany   Nati… Full-time  Permanent                      5                NA #>  2 Germany   Nati… Full-time  Permanent                     NA                NA #>  3 Switzerl… Regi… Full-time  Permanent                     NA                NA #>  4 Switzerl… Local Part-time  Permanent                     NA                 5 #>  5 Austria   Nati… Part-time  Permanent                     NA                NA #>  6 Switzerl… Local Freelancer NA                            NA                NA #>  7 Germany   Local Full-time  Permanent                     NA                NA #>  8 Denmark   Nati… Full-time  Permanent                     NA                NA #>  9 Switzerl… Local Full-time  Permanent                      5                 5 #> 10 Denmark   Nati… Full-time  Permanent                     NA                NA #> # ℹ 1,190 more rows #> # ℹ 9 more variables: ethics_1 <dbl>, ethics_2 <dbl>, ethics_3 <dbl>, #> #   ethics_4 <dbl>, work_experience <dbl>, trust_parliament <dbl>, #> #   trust_government <dbl>, trust_parties <dbl>, trust_politicians <dbl> WoJ %>% dplyr::select(country) %>% setna_scale(country, value = \"Germany\") #> # A tibble: 1,200 × 2 #>    country     country_na  #>  * <fct>       <fct>       #>  1 Germany     NA          #>  2 Germany     NA          #>  3 Switzerland Switzerland #>  4 Switzerland Switzerland #>  5 Austria     Austria     #>  6 Switzerland Switzerland #>  7 Germany     NA          #>  8 Denmark     Denmark     #>  9 Switzerland Switzerland #> 10 Denmark     Denmark     #> # ℹ 1,190 more rows WoJ %>% dplyr::select(country) %>% setna_scale(country, value = c(\"Germany\", \"Switzerland\")) #> # A tibble: 1,200 × 2 #>    country     country_na #>  * <fct>       <fct>      #>  1 Germany     NA         #>  2 Germany     NA         #>  3 Switzerland NA         #>  4 Switzerland NA         #>  5 Austria     Austria    #>  6 Switzerland NA         #>  7 Germany     NA         #>  8 Denmark     Denmark    #>  9 Switzerland NA         #> 10 Denmark     Denmark    #> # ℹ 1,190 more rows"},{"path":"https://joon-e.github.io/tidycomm/reference/snscomments.html","id":null,"dir":"Reference","previous_headings":"","what":"SNS Comments data — snscomments","title":"SNS Comments data — snscomments","text":"dataset 630 German participants online experiment. experiment investigated effects user comments social network sites (SNS) individuals' perceptions journalistic quality. researchers varied subject article (factor 1: 'Copyright directive' 'Social housing'), order comment presentation (factor 2: article) valence comments (factor 3: positive negative).","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/snscomments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SNS Comments data — snscomments","text":"","code":"snscomments"},{"path":"https://joon-e.github.io/tidycomm/reference/snscomments.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SNS Comments data — snscomments","text":"data frame 630 observations 15 variables: age Age participant gender Gender participant, either 'female' 'female' education Level formal education participant, either 'low formal education' 'high formal education' need_cognition Index measuring psychological trait person enjoy thinking, calculated several survey items prior_knowledge Index measuring person's prior knowledge presented subject article, calculated several survey items group Numeric id group participant experiment issue Subject article participant given read, either 'Copyright directive' 'Social housing' order Order comments participant exposed , either 'Comments ', 'Comments ', 'Control group' valence Valence comments participant exposed , either 'Negative', 'Positive', 'Control group' control_group Indicates whether participant 'Control group' 'Experimental group' medium_evaluation Index measuring participant's evaluation medium's quality, calculated several survey items article_evaluation Index measuring participant's evaluation article's quality, calculated several survey items comments_quality Participant's perception quality comments comments_valence Participant's perception valence comments article_elaboration Participant's measure much attention put reading article","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/snscomments.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SNS Comments data — snscomments","text":"https://osf.io/r867v/","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/snscomments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SNS Comments data — snscomments","text":"dataset created OSF project: https://osf.io/r867v/, corresponding paper: Kümpel, . S., & Unkel, J. (2020). Negativity wins last: presentation order valence user comments affect perceptions journalistic quality. Journal Media Psychology: Theories, Methods, Applications, 32(2), 89–99. doi:10.1027/1864-1105/a000261","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/t_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute t-tests — t_test","title":"Compute t-tests — t_test","text":"Computes t-tests one group variable specified test variables. variables specified, numeric (integer double) variables used. Levene's test automatically determine whether pooled variance used estimate variance. Otherwise Welch (Satterthwaite) approximation degrees freedom used.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/t_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute t-tests — t_test","text":"","code":"t_test(   data,   group_var,   ...,   var.equal = TRUE,   paired = FALSE,   pooled_sd = TRUE,   levels = NULL,   case_var = NULL,   mu = NULL )"},{"path":"https://joon-e.github.io/tidycomm/reference/t_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute t-tests — t_test","text":"data tibble tdcmm model group_var group variable (column name) specify split two samples (two-sample t-test) variable compare one-sample t-test ... test variables (column names). Leave empty compute t-tests numeric variables data. Also leave empty one-sample t-tests. var.equal parameter deprecated (previously: logical variable indicating whether treat two variances equal. TRUE pooled variance used estimate variance otherwise Welch (Satterthwaite) approximation degrees freedom used. Defaults TRUE). paired logical indicating whether want paired t-test. Defaults FALSE. pooled_sd logical indicating whether use pooled standard deviation calculation Cohen's d. Defaults TRUE. levels optional: vector length two specifying two levels group variable. case_var optional: case-identifying variable (column name). set paired = TRUE, specifying case variable ensure data properly sorted dependent t-test. mu optional: number indicating true value mean general population (\\(\\mu\\)). set, one-sample t-test (.e., location test) calculated. Leave NULL calculate two-sample t-test(s).","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/t_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute t-tests — t_test","text":"tdcmm model","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/t_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute t-tests — t_test","text":"","code":"WoJ %>% t_test(temp_contract, autonomy_selection, autonomy_emphasis) #> # A tibble: 2 × 12 #>   Variable M_Permanent SD_Permanent M_Temporary SD_Temporary Delta_M     t    df #> * <chr>      <num:.3!>    <num:.3!>   <num:.3!>    <num:.3!> <num:.> <num> <dbl> #> 1 autonom…       3.910        0.755       3.698        0.932   0.212 1.627    56 #> 2 autonom…       4.124        0.768       3.887        0.870   0.237 2.171   995 #> # ℹ 4 more variables: p <num:.3!>, d <num:.3!>, Levene_p <dbl>, var_equal <chr> WoJ %>% t_test(temp_contract) #> # A tibble: 11 × 12 #>    Variable     M_Permanent SD_Permanent M_Temporary SD_Temporary Delta_M      t #>  * <chr>          <num:.3!>    <num:.3!>   <num:.3!>    <num:.3!> <num:.> <num:> #>  1 autonomy_se…       3.910        0.755       3.698        0.932   0.212  1.627 #>  2 autonomy_em…       4.124        0.768       3.887        0.870   0.237  2.171 #>  3 ethics_1           1.568        0.850       1.981        0.990  -0.414 -3.415 #>  4 ethics_2           3.241        1.263       3.509        1.234  -0.269 -1.510 #>  5 ethics_3           2.369        1.121       2.283        0.928   0.086  0.549 #>  6 ethics_4           2.534        1.239       2.566        1.217  -0.032 -0.185 #>  7 work_experi…      17.707       10.540      11.283       11.821   6.424  4.288 #>  8 trust_parli…       3.073        0.797       3.019        0.772   0.054  0.480 #>  9 trust_gover…       2.870        0.847       2.642        0.811   0.229  1.918 #> 10 trust_parti…       2.430        0.724       2.358        0.736   0.072  0.703 #> 11 trust_polit…       2.533        0.707       2.396        0.689   0.136  1.369 #> # ℹ 5 more variables: df <dbl>, p <num:.3!>, d <num:.3!>, Levene_p <dbl>, #> #   var_equal <chr> WoJ %>% t_test(employment, autonomy_selection, autonomy_emphasis,   levels = c(\"Full-time\", \"Freelancer\")) #> # A tibble: 2 × 12 #>   Variable `M_Full-time` `SD_Full-time` M_Freelancer SD_Freelancer Delta_M     t #> * <chr>        <num:.3!>      <num:.3!>    <num:.3!>     <num:.3!> <num:.> <num> #> 1 autonom…         3.903          0.782        3.765         0.993   0.139 1.724 #> 2 autonom…         4.118          0.781        3.901         0.852   0.217 3.287 #> # ℹ 5 more variables: df <dbl>, p <num:.3!>, d <num:.3!>, Levene_p <dbl>, #> #   var_equal <chr> WoJ %>% t_test(autonomy_selection, mu = 3.62) #> # A tibble: 1 × 9 #>   Variable               M    SD CI_95_LL CI_95_UL    Mu     t    df        p #> * <chr>              <dbl> <dbl>    <dbl>    <dbl> <dbl> <dbl> <dbl>    <dbl> #> 1 autonomy_selection  3.88 0.803     3.83     3.92  3.62  11.0  1196 6.10e-27"},{"path":"https://joon-e.github.io/tidycomm/reference/tab_frequencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabulate frequencies — tab_frequencies","title":"Tabulate frequencies — tab_frequencies","text":"Tabulates frequencies one categorical variable, including relative, cumulative frequencies.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/tab_frequencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabulate frequencies — tab_frequencies","text":"","code":"tab_frequencies(data, ...)"},{"path":"https://joon-e.github.io/tidycomm/reference/tab_frequencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabulate frequencies — tab_frequencies","text":"data tibble tdcmm model ... Variables tabulate","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/tab_frequencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabulate frequencies — tab_frequencies","text":"tdcmm model","code":""},{"path":[]},{"path":"https://joon-e.github.io/tidycomm/reference/tab_frequencies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabulate frequencies — tab_frequencies","text":"","code":"WoJ %>% tab_frequencies(employment) #> # A tibble: 3 × 5 #>   employment     n percent cum_n cum_percent #> * <chr>      <int>   <dbl> <int>       <dbl> #> 1 Freelancer   172   0.143   172       0.143 #> 2 Full-time    902   0.752  1074       0.895 #> 3 Part-time    126   0.105  1200       1     WoJ %>% tab_frequencies(employment, country) #> # A tibble: 15 × 6 #>    employment country         n percent cum_n cum_percent #>  * <chr>      <fct>       <int>   <dbl> <int>       <dbl> #>  1 Freelancer Austria        16 0.0133     16      0.0133 #>  2 Freelancer Denmark        85 0.0708    101      0.0842 #>  3 Freelancer Germany        29 0.0242    130      0.108  #>  4 Freelancer Switzerland    10 0.00833   140      0.117  #>  5 Freelancer UK             32 0.0267    172      0.143  #>  6 Full-time  Austria       165 0.138     337      0.281  #>  7 Full-time  Denmark       275 0.229     612      0.51   #>  8 Full-time  Germany       139 0.116     751      0.626  #>  9 Full-time  Switzerland   154 0.128     905      0.754  #> 10 Full-time  UK            169 0.141    1074      0.895  #> 11 Part-time  Austria        26 0.0217   1100      0.917  #> 12 Part-time  Denmark        16 0.0133   1116      0.93   #> 13 Part-time  Germany         5 0.00417  1121      0.934  #> 14 Part-time  Switzerland    69 0.0575   1190      0.992  #> 15 Part-time  UK             10 0.00833  1200      1"},{"path":"https://joon-e.github.io/tidycomm/reference/tab_percentiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabulate percentiles for numeric variables — tab_percentiles","title":"Tabulate percentiles for numeric variables — tab_percentiles","text":"function tabulates specified percentiles given numeric variables. variables provided, function attempt describe numeric (either integer double) variables found within input. percentiles calculated based levels parameter, defaults every 10% 10% 90%. NA values always removed concept percentile based ranking. NA value, ordered relation actual numbers.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/tab_percentiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabulate percentiles for numeric variables — tab_percentiles","text":"","code":"tab_percentiles(   data,   ...,   levels = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1) )"},{"path":"https://joon-e.github.io/tidycomm/reference/tab_percentiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabulate percentiles for numeric variables — tab_percentiles","text":"data tibble tdcmm model contains numeric data tabulated. ... Variables within data tabulate percentiles. variables provided, numeric variables used. levels numeric vector specifying percentiles compute. Defaults c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0).","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/tab_percentiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabulate percentiles for numeric variables — tab_percentiles","text":"tdcmm model","code":""},{"path":[]},{"path":"https://joon-e.github.io/tidycomm/reference/tab_percentiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabulate percentiles for numeric variables — tab_percentiles","text":"","code":"WoJ %>% tab_percentiles(work_experience) #> # A tibble: 1 × 11 #>   Variable          p10   p20   p30   p40   p50   p60   p70   p80   p90  p100 #> * <chr>           <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1 work_experience     4     7    10    14    17    20    25    28    33    53 WoJ %>% tab_percentiles(work_experience, autonomy_emphasis) #> # A tibble: 2 × 11 #>   Variable            p10   p20   p30   p40   p50   p60   p70   p80   p90  p100 #> * <chr>             <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1 work_experience       4     7    10    14    17    20    25    28    33    53 #> 2 autonomy_emphasis     3     4     4     4     4     4     4     5     5     5"},{"path":"https://joon-e.github.io/tidycomm/reference/tdcmm-class.html","id":null,"dir":"Reference","previous_headings":"","what":"tdcmm class — tdcmm-class","title":"tdcmm class — tdcmm-class","text":"tdcmm class specialized type data frame subclass tbl_df, also known \"tibble\". designed used tidycomm functions provide additional information context output tibbles generated functions. subclass specifically augments output based statistical tests, including relevant model object(s) estimated analysis, well performed assumption checks. tdcmm objects tidycomm subclassed individual classes handling visualization printing per \"output\" type.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/test_icr.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform an intercoder reliability test — test_icr","title":"Perform an intercoder reliability test — test_icr","text":"Performs intercoder reliability test computing various intercoder reliability estimates included variables","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/test_icr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform an intercoder reliability test — test_icr","text":"","code":"test_icr(   data,   unit_var,   coder_var,   ...,   levels = NULL,   na.omit = FALSE,   agreement = TRUE,   holsti = TRUE,   kripp_alpha = TRUE,   cohens_kappa = FALSE,   fleiss_kappa = FALSE,   brennan_prediger = FALSE,   lotus = FALSE,   s_lotus = FALSE )"},{"path":"https://joon-e.github.io/tidycomm/reference/test_icr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform an intercoder reliability test — test_icr","text":"data tibble tdcmm model unit_var Variable unit identifiers coder_var Variable coder identifiers ... Variables compute intercoder reliability estimates . Leave empty compute variables (excluding unit_var `coder_var“) data. levels Optional named vector levels test variables na.omit Logical indicating whether NA values stripped computation. Defaults FALSE. agreement Logical indicating whether simple percent agreement computed. Defaults TRUE. holsti Logical indicating whether Holsti's reliability estimate (mean pairwise agreement) computed. Defaults TRUE. kripp_alpha Logical indicating whether Krippendorff's Alpha computed. Defaults TRUE. cohens_kappa Logical indicating whether Cohen's Kappa computed. Defaults FALSE. fleiss_kappa Logical indicating whether Fleiss' Kappa computed. Defaults FALSE. brennan_prediger Logical indicating whether Brennan & Prediger's Kappa computed (extension 3+ coders proposed von Eye (2006)). Defaults FALSE. lotus Logical indicating whether Fretwurst's Lotus computed. Defaults FALSE s_lotus Logical indicating whether Fretwurst's standardized Lotus (S-Lotus) computed. Defaults FALSE.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/test_icr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform an intercoder reliability test — test_icr","text":"tdcmm model","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/test_icr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform an intercoder reliability test — test_icr","text":"Brennan, R. L., & Prediger, D. J. (1981). Coefficient Kappa: uses, misuses, alternatives. Educational Psychological Measurement, 41(3), 687-699. https://doi.org/10.1177/001316448104100307 Cohen, J. (1960). coefficient agreement nominal scales. Educational Psychological Measurement, 20(1), 37-46. https://doi.org/10.1177/001316446002000104 Fleiss, J. L. (1971). Measuring nominal scale agreement among many raters. Psychological Bulletin, 76(5), 378-382. https://doi.org/10.1037/h0031619 Fretwurst, B. (2015). Reliabilität und Validität von Inhaltsanalysen. Mit Erläuterungen zur Berechnung des Reliabilitätskoeffizienten „Lotus“ mit SPSS. W. Wirth, K. Sommer, M. Wettstein, & J. Matthes (Ed.), Qualitätskriterien der Inhaltsanalyse (S. 176–203). Herbert von Halem. Krippendorff, K. (2011). Computing Krippendorff's Alpha-Reliability. Retrieved http://repository.upenn.edu/asc_papers/43 von Eye, . (2006). Alternative Cohen's Kappa. European Psychologist, 11(1), 12-24. https://doi.org/10.1027/1016-9040.11.1.12","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/test_icr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform an intercoder reliability test — test_icr","text":"","code":"fbposts %>% test_icr(post_id, coder_id, pop_elite, pop_othering) #> # A tibble: 2 × 8 #>   Variable     n_Units n_Coders n_Categories Level   Agreement Holstis_CR #> * <chr>          <int>    <int>        <int> <chr>       <dbl>      <dbl> #> 1 pop_elite         45        6            6 nominal     0.733      0.861 #> 2 pop_othering      45        6            4 nominal     0.867      0.945 #> # ℹ 1 more variable: Krippendorffs_Alpha <dbl> fbposts %>% test_icr(post_id, coder_id, levels = c(n_pictures = \"ordinal\"), fleiss_kappa = TRUE) #> # A tibble: 5 × 9 #>   Variable     n_Units n_Coders n_Categories Level   Agreement Holstis_CR #> * <chr>          <int>    <int>        <int> <chr>       <dbl>      <dbl> #> 1 type              45        6            4 nominal     1          1     #> 2 n_pictures        45        6            7 ordinal     0.822      0.930 #> 3 pop_elite         45        6            6 nominal     0.733      0.861 #> 4 pop_people        45        6            2 nominal     0.778      0.916 #> 5 pop_othering      45        6            4 nominal     0.867      0.945 #> # ℹ 2 more variables: Krippendorffs_Alpha <dbl>, Fleiss_Kappa <dbl>"},{"path":"https://joon-e.github.io/tidycomm/reference/to_correlation_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create correlation matrix — to_correlation_matrix","title":"Create correlation matrix — to_correlation_matrix","text":"Turns tibble exported correlate correlation matrix.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/to_correlation_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create correlation matrix — to_correlation_matrix","text":"","code":"to_correlation_matrix(data, verbose = FALSE)"},{"path":"https://joon-e.github.io/tidycomm/reference/to_correlation_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create correlation matrix — to_correlation_matrix","text":"data tdcmm model returned correlate verbose logical, defaulted FALSE. applicable correlating two variables. set TRUE, function outputs information regarding sample size.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/to_correlation_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create correlation matrix — to_correlation_matrix","text":"tdcmm model","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/to_correlation_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create correlation matrix — to_correlation_matrix","text":"","code":"WoJ %>% correlate() %>% to_correlation_matrix() #> # A tibble: 11 × 12 #>    r             autonomy_selection autonomy_emphasis ethics_1 ethics_2 ethics_3 #>  * <chr>                      <dbl>             <dbl>    <dbl>    <dbl>    <dbl> #>  1 autonomy_sel…            1                 0.644   -0.0766  -0.0274   -0.0257 #>  2 autonomy_emp…            0.644             1       -0.114   -0.0337   -0.0297 #>  3 ethics_1                -0.0766           -0.114    1        0.172     0.165  #>  4 ethics_2                -0.0274           -0.0337   0.172    1         0.409  #>  5 ethics_3                -0.0257           -0.0297   0.165    0.409     1      #>  6 ethics_4                -0.0781           -0.127    0.343    0.321     0.273  #>  7 work_experie…            0.161             0.155   -0.103   -0.168    -0.0442 #>  8 trust_parlia…           -0.00840          -0.00465 -0.0378   0.00161  -0.0486 #>  9 trust_govern…            0.0414            0.0268  -0.102    0.0374   -0.0743 #> 10 trust_parties            0.0269            0.0102  -0.0472   0.0238   -0.0115 #> 11 trust_politi…            0.0109            0.00242 -0.00725  0.0250   -0.0212 #> # ℹ 6 more variables: ethics_4 <dbl>, work_experience <dbl>, #> #   trust_parliament <dbl>, trust_government <dbl>, trust_parties <dbl>, #> #   trust_politicians <dbl>"},{"path":"https://joon-e.github.io/tidycomm/reference/unianova.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute one-way ANOVAs — unianova","title":"Compute one-way ANOVAs — unianova","text":"Computes one-way ANOVAs one group variable specified test variables. variables specified, numeric (integer double) variables used. Levene's test automatically determine whether classic ANOVA used. Otherwise Welch's ANOVA (Satterthwaite's) approximation degrees freedom used.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/unianova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute one-way ANOVAs — unianova","text":"","code":"unianova(data, group_var, ..., descriptives = FALSE, post_hoc = FALSE)"},{"path":"https://joon-e.github.io/tidycomm/reference/unianova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute one-way ANOVAs — unianova","text":"data tibble tdcmm model group_var group variable (column name) ... test variables (column names). Leave empty compute ANOVAs numeric variables data. descriptives logical indicating whether descriptive statistics (mean & standard deviation) group levels added returned tibble. Defaults FALSE. post_hoc logical value indicating whether post-hoc tests performed. Tukey's HSD employed assumption equal variances met, whereas Games-Howell test automatically applied assumption violated. results post-hoc test added list column resulting tibble.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/unianova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute one-way ANOVAs — unianova","text":"tdcmm model","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/unianova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute one-way ANOVAs — unianova","text":"","code":"WoJ %>% unianova(employment, autonomy_selection, autonomy_emphasis) #> # A tibble: 2 × 9 #>   Variable            F df_num df_denom     p omega_squared eta_squared Levene_p #> * <chr>           <num>  <dbl>    <dbl> <num>     <num:.3!>   <num:.3!>    <dbl> #> 1 autonomy_selec… 2.012      2      251 0.136         0.002      NA        0     #> 2 autonomy_empha… 5.861      2     1192 0.003        NA           0.010    0.175 #> # ℹ 1 more variable: var_equal <chr> WoJ %>% unianova(employment, descriptives = TRUE, post_hoc = TRUE) #> # A tibble: 11 × 16 #>    Variable                  F df_num df_denom     p omega_squared `M_Full-time` #>  * <chr>              <num:.3>  <dbl>    <dbl> <num>     <num:.3!>         <dbl> #>  1 autonomy_selection    2.012      2      251 0.136         0.002          3.90 #>  2 autonomy_emphasis     5.861      2     1192 0.003        NA              4.12 #>  3 ethics_1              2.171      2     1197 0.115        NA              1.62 #>  4 ethics_2              2.204      2     1197 0.111        NA              3.24 #>  5 ethics_3              5.823      2      253 0.003         0.007          2.39 #>  6 ethics_4              3.453      2     1197 0.032        NA              2.58 #>  7 work_experience       3.739      2      240 0.025         0.006         17.5  #>  8 trust_parliament      1.527      2     1197 0.218        NA              3.06 #>  9 trust_government     12.864      2     1197 0.000        NA              2.82 #> 10 trust_parties         0.842      2     1197 0.431        NA              2.42 #> 11 trust_politicians     0.328      2     1197 0.721        NA              2.52 #> # ℹ 9 more variables: `SD_Full-time` <dbl>, `M_Part-time` <dbl>, #> #   `SD_Part-time` <dbl>, M_Freelancer <dbl>, SD_Freelancer <dbl>, #> #   post_hoc <list>, eta_squared <num:.3!>, Levene_p <dbl>, var_equal <chr> if (FALSE) { # \\dontrun{ WoJ %>% unianova(employment) } # }"},{"path":"https://joon-e.github.io/tidycomm/reference/visualize.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize tidycomm output — visualize.tdcmm_ctgrcl","title":"Visualize tidycomm output — visualize.tdcmm_ctgrcl","text":"Returns ggplot2 visualization appropriate respective tdcmm model (see list ). Returns NULL (warning) visualization implemented particular model.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/visualize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize tidycomm output — visualize.tdcmm_ctgrcl","text":"","code":"# S3 method for class 'tdcmm_ctgrcl' visualize(x, ..., .design = design_lmu())  # S3 method for class 'tdcmm_crrltn' visualize(x, which = \"jitter\", ..., .design = design_lmu())  # S3 method for class 'tdcmm_dscrb' visualize(x, ..., .design = design_lmu())  # S3 method for class 'tdcmm_rgrssn' visualize(x, which = \"jitter\", ..., .design = design_lmu())  # S3 method for class 'tdcmm_prcntl' visualize(x, ..., .design = design_lmu())  visualize(x, ..., .design = design_lmu())  # S3 method for class 'tdcmm_ttst' visualize(x, ..., .design = design_lmu())  # S3 method for class 'tdcmm_nnv' visualize(x, ..., .design = design_lmu())"},{"path":"https://joon-e.github.io/tidycomm/reference/visualize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize tidycomm output — visualize.tdcmm_ctgrcl","text":"x tdcmm output ... arguments .design list style visualization; default good practice use one ready-made design functions' returns (e.g., design_lmu(), design_grey()); , however, also provide list list 9 keys: main_color_1, vector 12 main_colors, corresponding main_contrast_1 (color text write top main color) corresponding main_contrasts, main_size (lines), comparison_linetype, comparison_color, comparison_size lines act comparative lines, ggplot2 theme string specify type regression visualization. One \"jitter\" (default), \"alpha\", \"correlogram\", \"residualsfitted\" (\"resfit\"), \"pp\", \"qq\", \"scalelocation\" (\"scaloc\"), \"residualsleverage\" (\"reslev\"). See details.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/visualize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize tidycomm output — visualize.tdcmm_ctgrcl","text":"ggplot2 object","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/visualize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualize tidycomm output — visualize.tdcmm_ctgrcl","text":"describe(): horizontal box plot depicting box Q25 Q75, thick line Mdn, two whiskers Min/Max respectively; additional arguments describe_cat(): horizontal bar plot depicting number occurrences; additional arguments tab_frequencies(): either histogram (1 variable given) multiple histograms wrapped, 5+ variables issue warning readability; additional arguments tab_percentiles(): quantile plot crosstab(): horizontal stacked bar plot, either absolute relative (depending percentages argument crosstab()) t_test(): plot points appended 95% confidence intervals; additional arguments unianova(): plot points appended 95% confidence intervals; additional arguments correlate(): plot scatter; 2 variables, correlogram plotted (just like to_correlation_matrix()); use parameter select points visualized: \"jitter\" adds bit random noise point better reflect categorical values \"alpha\" depicts points slightly transparent multiple points position easily visible correlate(): partial correlation, scatter plot jitter plotted using residuals control variable () dependent well (b) independent variable; additional arguments to_correlation_matrix(): plot correlogram building GGally::ggpairs() jittered scatter plots lower half, histograms diagonals, correlation coefficients 95% confidence intervals upper half regress(): plot regression results scatter (without jitter) additional depicted model line including 95% confidence intervals; alternatively, visual check inspection helpers can plotted parameter can set yield one following: \"jitter\" (default): plots scatter plot jitter per independent variable adds linear regression line 95% confidence intervals ; keep mind , say, three independent variables, visualization shows three plots one linear regression , three models (.e., three colored lines) reflect particular combination one independent dependent variable \"alpha\" (default): almost like jitter instead jitter plots scatter plots transparency multiple data points position appear darker \"correlogram\": like to_correlation_matrix(), correlogram independent variables produced help determine independent errors multicollinearity \"residualsfitted\" \"resfit\": residuals-versus-fitted plot useful determine distributions; normal distribution colored line ideally fit dashed line \"pp\": (normal) probability-probability plot helps checking multicollinearity whereby data (mostly center data within IQR) ideally align dashed line \"qq\": (normal) quantile-quantile plot helps checking multicollinearity focuses outliers; data align dashed line \"scalelocation\" \"scaloc\": scale-location (sometimes also called spread-location) plot checks whether residuals spread equally help check homoscedasticity; ideally, colored line horizontal data spreads less randomly \"residualsleverage\" \"reslev\": residuals-versus-leverage plot allows check influential outliers affecting final model rest data; ideally, data far compared bulk data thus shows high Cook's distance rest; colored line helps identify bulk data five -distant outliers labelled case number (.e., row number dataset); note 5 arbitrary , meaning might far might 5 noteworthy outliers model; interpret care Note returned ggplot2 object can modified easily appending overwriting individual geom's scale's. See examples documentation ggplot2.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/visualize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize tidycomm output — visualize.tdcmm_ctgrcl","text":"","code":"if (FALSE) { # \\dontrun{ WoJ %>%   describe() %>%   visualize()  fbposts %>%   describe_cat() %>%   visualize()  WoJ %>%   tab_frequencies(trust_parliament) %>%   visualize() fbposts %>%   tab_frequencies(pop_elite, pop_people, pop_othering) %>%   visualize()  WoJ %>%   crosstab(reach, employment) %>%   visualize()  fbposts %>%   crosstab(coder_id, type, percentages = TRUE) %>%   visualize()  WoJ %>%   t_test(temp_contract, autonomy_selection, autonomy_emphasis) %>%   visualize()  WoJ %>%   unianova(country, autonomy_selection, autonomy_emphasis) %>%   visualize()  fbposts %>%   correlate(pop_elite, pop_people) %>%   visualize()  fbposts %>%   correlate(pop_elite, pop_people, with = pop_othering) %>%   visualize()  fbposts %>%   correlate(pop_elite, pop_people) %>%   visualize(\"alpha\")  WoJ %>%   correlate(autonomy_selection, ethics_1, partial = work_experience) %>%   visualize()  WoJ %>%   correlate(ethics_1, ethics_2, ethics_3, ethics_4) %>%   to_correlation_matrix() %>%   visualize()  r <- WoJ %>% regress(autonomy_selection, temp_contract, work_experience, ethics_2) r %>% visualize() # same as r %>% visualize(\"jitter\") r %>% visualize(\"alpha\") r %>% visualize(\"correlogram\") r %>% visualize(\"resfit\") r %>% visualize(\"pp\") r %>% visualize(\"qq\") r %>% visualize(\"scaloc\") r %>% visualize(\"reslev\")  # To overwrite a certain scale or geom, just append as you would with ggplot2 fbposts %>%   describe_cat() %>%   visualize() +     ggplot2::scale_fill_grey() } # }"},{"path":"https://joon-e.github.io/tidycomm/reference/z_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Z-standardize numeric, continuous variables — z_scale","title":"Z-standardize numeric, continuous variables — z_scale","text":"function z-standardizes specified numeric columns numeric columns none specified. z-standardized scale centers mean 0.0 standard deviation 1.0, making comparable z-standardized distributions.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/z_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Z-standardize numeric, continuous variables — z_scale","text":"","code":"z_scale(data, ..., name = NULL, overwrite = FALSE)"},{"path":"https://joon-e.github.io/tidycomm/reference/z_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Z-standardize numeric, continuous variables — z_scale","text":"data tibble tdcmm model. ... Numeric variables z-standardized. none provided, numeric columns z-standardized. name Optional name new z-standardized variable single variable provided. default, name original variable name suffixed _z. overwrite Logical. TRUE, overwrites original variable(s) z-standardized values. FALSE (default), new variable(s) created.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/z_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Z-standardize numeric, continuous variables — z_scale","text":"tdcmm model z-standardized variable(s).","code":""},{"path":[]},{"path":"https://joon-e.github.io/tidycomm/reference/z_scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Z-standardize numeric, continuous variables — z_scale","text":"","code":"WoJ %>% z_scale(autonomy_emphasis) #> # A tibble: 1,200 × 16 #>    country   reach employment temp_contract autonomy_selection autonomy_emphasis #>  * <fct>     <fct> <chr>      <fct>                      <dbl>             <dbl> #>  1 Germany   Nati… Full-time  Permanent                      5                 4 #>  2 Germany   Nati… Full-time  Permanent                      3                 4 #>  3 Switzerl… Regi… Full-time  Permanent                      4                 4 #>  4 Switzerl… Local Part-time  Permanent                      4                 5 #>  5 Austria   Nati… Part-time  Permanent                      4                 4 #>  6 Switzerl… Local Freelancer NA                             4                 4 #>  7 Germany   Local Full-time  Permanent                      4                 4 #>  8 Denmark   Nati… Full-time  Permanent                      3                 3 #>  9 Switzerl… Local Full-time  Permanent                      5                 5 #> 10 Denmark   Nati… Full-time  Permanent                      2                 4 #> # ℹ 1,190 more rows #> # ℹ 10 more variables: ethics_1 <dbl>, ethics_2 <dbl>, ethics_3 <dbl>, #> #   ethics_4 <dbl>, work_experience <dbl>, trust_parliament <dbl>, #> #   trust_government <dbl>, trust_parties <dbl>, trust_politicians <dbl>, #> #   autonomy_emphasis_z <dbl> WoJ %>% z_scale(autonomy_emphasis, name = \"my_zstdized_variable\") #> # A tibble: 1,200 × 16 #>    country   reach employment temp_contract autonomy_selection autonomy_emphasis #>  * <fct>     <fct> <chr>      <fct>                      <dbl>             <dbl> #>  1 Germany   Nati… Full-time  Permanent                      5                 4 #>  2 Germany   Nati… Full-time  Permanent                      3                 4 #>  3 Switzerl… Regi… Full-time  Permanent                      4                 4 #>  4 Switzerl… Local Part-time  Permanent                      4                 5 #>  5 Austria   Nati… Part-time  Permanent                      4                 4 #>  6 Switzerl… Local Freelancer NA                             4                 4 #>  7 Germany   Local Full-time  Permanent                      4                 4 #>  8 Denmark   Nati… Full-time  Permanent                      3                 3 #>  9 Switzerl… Local Full-time  Permanent                      5                 5 #> 10 Denmark   Nati… Full-time  Permanent                      2                 4 #> # ℹ 1,190 more rows #> # ℹ 10 more variables: ethics_1 <dbl>, ethics_2 <dbl>, ethics_3 <dbl>, #> #   ethics_4 <dbl>, work_experience <dbl>, trust_parliament <dbl>, #> #   trust_government <dbl>, trust_parties <dbl>, trust_politicians <dbl>, #> #   my_zstdized_variable <dbl> WoJ %>%   z_scale(autonomy_emphasis) %>%   tab_frequencies(autonomy_emphasis, autonomy_emphasis_z) #> # A tibble: 6 × 6 #>   autonomy_emphasis autonomy_emphasis_z     n percent cum_n cum_percent #> *             <dbl>               <dbl> <int>   <dbl> <int>       <dbl> #> 1                 1             -3.88      10 0.00833    10     0.00833 #> 2                 2             -2.62      36 0.03       46     0.0383  #> 3                 3             -1.36     165 0.138     211     0.176   #> 4                 4             -0.0961   626 0.522     837     0.698   #> 5                 5              1.17     358 0.298    1195     0.996   #> 6                NA             NA          5 0.00417  1200     1"},{"path":"https://joon-e.github.io/tidycomm/reference/zero_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if range of vector is close to zero, with a specified tolerance — zero_range","title":"Determine if range of vector is close to zero, with a specified tolerance — zero_range","text":"machine epsilon difference 1.0 next number can represented machine. default, function uses epsilon * 1000 tolerance. First scales values mean 1, checks difference larger tolerance.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/zero_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if range of vector is close to zero, with a specified tolerance — zero_range","text":"","code":"zero_range(x, tol = 1000 * .Machine$double.eps)"},{"path":"https://joon-e.github.io/tidycomm/reference/zero_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if range of vector is close to zero, with a specified tolerance — zero_range","text":"x numeric range: vector length 2 tol value specifying tolerance.","code":""},{"path":"https://joon-e.github.io/tidycomm/reference/zero_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine if range of vector is close to zero, with a specified tolerance — zero_range","text":"logical TRUE relative difference endpoints range distinguishable 0.","code":""},{"path":"https://joon-e.github.io/tidycomm/news/index.html","id":"tidycomm-041","dir":"Changelog","previous_headings":"","what":"tidycomm 0.4.1","title":"tidycomm 0.4.1","text":"CRAN release: 2024-02-22","code":""},{"path":[]},{"path":"https://joon-e.github.io/tidycomm/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"tidycomm 0.3.0","text":"Converted tibble returns tdcmm/tibble return objects (behave just like tibbles essence objects now) Added partial correlation correlate(..., partial = z_var) Added correlation focus variable correlate(..., = focus_var) Added linear regression regress() Added one-sample t-test t_test(..., mu = ...) Added reverse_scale(), minmax_scale(), z_scale(), center_scale(), setna_scale(), recode_cat_scale(), recode_scale(), dummify_cale() shift modify continuous categorical scales Added tab_percentiles() Added visualize() visualize almost everything Added snscomments incvlcomments additional data sets","code":""},{"path":"https://joon-e.github.io/tidycomm/news/index.html","id":"minor-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"tidycomm 0.3.0","text":"Changed unianova() t_test() build leveneTest() Allowed test_icr() work grouped data Converted code examples documentation built tidycomm-provided data sets Added omega_squared, Levene_p, var_equal columns default return unianova() Added d, se, t, df Removed null.value list return values unianova() post-hoc test Renamed unianova() return column names Variable (previously: Var), Group_Var (prev. term), Delta_M (prev. estimate), p (prev. adj.p.value), conf.lower conf.upper (prev. conf.low conf.high)","code":""},{"path":"https://joon-e.github.io/tidycomm/news/index.html","id":"bugfixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"tidycomm 0.3.0","text":"Unified output coherent number -comma digits","code":""},{"path":[]},{"path":"https://joon-e.github.io/tidycomm/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"tidycomm 0.2.0","text":"Added Fretwurst’s Lotus S-Lotus intercoder reliability coeffecients test_icr() function describe_cat() function added describe categorical variables","code":""},{"path":"https://joon-e.github.io/tidycomm/news/index.html","id":"minor-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"tidycomm 0.2.0","text":"descriptive error messages common errors describe() now also reports 95% confidence intervals describe() now reports valid N instead full N test_icr() now works tidyselect selection","code":""},{"path":"https://joon-e.github.io/tidycomm/news/index.html","id":"bugfixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"tidycomm 0.2.0","text":"Empty groups dropped describing one grouping variable Krippendorff’s Alpha returns 1 variable one category unianova() now works variable names containing whitespace Groups dropped test_icr() avoid computational issues","code":""}]
